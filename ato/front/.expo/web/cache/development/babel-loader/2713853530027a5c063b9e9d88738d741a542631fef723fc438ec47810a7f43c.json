{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EditAnimalForm = function EditAnimalForm(_ref) {\n  var _ref2;\n  var animal = _ref.animal;\n  var _useState = useState(animal.nom),\n    _useState2 = _slicedToArray(_useState, 2),\n    nom = _useState2[0],\n    setNom = _useState2[1];\n  var _useState3 = useState(animal.type),\n    _useState4 = _slicedToArray(_useState3, 2),\n    type = _useState4[0],\n    setType = _useState4[1];\n  var _useState5 = useState(animal.couleur),\n    _useState6 = _slicedToArray(_useState5, 2),\n    couleur = _useState6[0],\n    setCouleur = _useState6[1];\n  var _useState7 = useState(animal.description),\n    _useState8 = _slicedToArray(_useState7, 2),\n    description = _useState8[0],\n    setDescription = _useState8[1];\n  var _useState9 = useState(animal.image),\n    _useState10 = _slicedToArray(_useState9, 2),\n    image = _useState10[0],\n    setImage = _useState10[1];\n  var handleSubmit = function handleSubmit() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      try {\n        var formData = new FormData();\n        formData.append('nom', nom);\n        formData.append('type', type);\n        formData.append('couleur', couleur);\n        formData.append('description', description);\n        formData.append('photo', image);\n        var response = yield axios.put(`http://localhost:3000/crud/${animal.id}/edit`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log(response.data);\n      } catch (error) {\n        console.error('Error updating animal:', error);\n      }\n    })).apply(this, arguments);\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Nom\",\n      value: nom,\n      onChangeText: setNom\n    }), _jsx(TextInput, {\n      placeholder: \"Type\",\n      value: type,\n      onChangeText: setType\n    }), _jsx(TextInput, {\n      placeholder: \"Couleur\",\n      value: couleur,\n      onChangeText: setCouleur\n    }), _jsx(TextInput, {\n      placeholder: \"Description\",\n      value: description,\n      onChangeText: setDescription\n    }), _jsx(TextInput, {\n      placeholder: \"Image\",\n      value: image,\n      onChangeText: setImage\n    }), _jsx(Button, {\n      title: \"Save\",\n      onPress: handleSubmit\n    })]\n  });\n};\nexport default EditAnimalForm;","map":{"version":3,"names":["React","useState","View","TextInput","Button","axios","jsx","_jsx","jsxs","_jsxs","EditAnimalForm","_ref","_ref2","animal","_useState","nom","_useState2","_slicedToArray","setNom","_useState3","type","_useState4","setType","_useState5","couleur","_useState6","setCouleur","_useState7","description","_useState8","setDescription","_useState9","image","_useState10","setImage","handleSubmit","_asyncToGenerator","formData","FormData","append","response","put","id","headers","console","log","data","error","apply","arguments","children","placeholder","value","onChangeText","title","onPress"],"sources":["C:/Users/Fabiola/Documents/react-native/front/components/Crud/Components/EditAnimalForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst EditAnimalForm = ({ animal }) => {\r\n  const [nom, setNom] = useState(animal.nom);\r\n  const [type, setType] = useState(animal.type);\r\n  const [couleur, setCouleur] = useState(animal.couleur);\r\n  const [description, setDescription] = useState(animal.description);\r\n  const [image, setImage] = useState(animal.image);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('nom', nom);\r\n      formData.append('type', type);\r\n      formData.append('couleur', couleur);\r\n      formData.append('description', description);\r\n      formData.append('photo', image);\r\n\r\n      const response = await axios.put(`http://localhost:3000/crud/${animal.id}/edit`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error('Error updating animal:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TextInput placeholder=\"Nom\" value={nom} onChangeText={setNom} />\r\n      <TextInput placeholder=\"Type\" value={type} onChangeText={setType} />\r\n      <TextInput placeholder=\"Couleur\" value={couleur} onChangeText={setCouleur} />\r\n      <TextInput placeholder=\"Description\" value={description} onChangeText={setDescription} />\r\n      <TextInput placeholder=\"Image\" value={image} onChangeText={setImage} />\r\n      <Button title=\"Save\" onPress={handleSubmit} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default EditAnimalForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}