{"ast":null,"code":"var _NativeWindStyleSheet = require(\"nativewind\").NativeWindStyleSheet;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  }\n});","map":{"version":3,"names":[],"sources":["C:/Users/Fabiola/Desktop/projet/front/components/Authentification/Inscription/InscriptionDoctor.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//   Text,\r\n//   View,\r\n//   TextInput,\r\n//   TouchableOpacity,\r\n//   Alert,\r\n//   Picker,\r\n//   Image,\r\n// } from \"react-native\";\r\n// import axios from \"axios\";\r\n// import * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\n// export const RegisterDoctor = () => {\r\n//   const [name, setName] = useState(\"\");\r\n//   const [firstname, setFirstname] = useState(\"\");\r\n//   const [contact, setContact] = useState(\"\");\r\n//   const [speciality, setSpeciality] = useState(\"\");\r\n//   const [experience, setExperience] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [selectedRole, setSelectedRole] = useState(\"\");\r\n//   const [roles, setRoles] = useState([]);\r\n\r\n// const [photo, setPhoto] = useState(null);\r\n\r\n// const selectPhoto = async () => {\r\n//     try {\r\n//       const result = await ImagePicker.launchImageLibraryAsync({\r\n//         mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n//         allowsEditing: true,\r\n//         aspect: [4, 3],\r\n//         quality: 1,\r\n//       });\r\n  \r\n//       if (!result.cancelled) {\r\n//         if (result.assets && result.assets.length > 0) {\r\n//           const selectedAsset = result.assets[0];\r\n//           if (selectedAsset.uri) {\r\n//             setPhoto(selectedAsset.uri);\r\n//             console.log(\"Selected photo:\", selectedAsset.uri);\r\n//           } else {\r\n//             console.error(\"Selected file URI is undefined.\");\r\n//           }\r\n//         } else {\r\n//           console.error(\"No assets found in the result.\");\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('ImagePicker Error:', error);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   useEffect(() => {\r\n//     // Fetch roles from your backend when the component mounts\r\n//     axios\r\n//       .get(\"http://127.0.0.1:3000/role/getRole\")\r\n//       .then((response) => {\r\n//         setRoles(response.data);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(error);\r\n//       });\r\n//   }, []);\r\n\r\n//   const roletenaizy = roles.filter((role) => role !== \"patient\");\r\n\r\n//  const handleSubmit = () => {\r\n//   if (!name || !firstname || !contact || !speciality || !experience || !email || !password || !selectedRole) {\r\n//     Alert.alert(\"Error\", \"Please fill in all fields\");\r\n//     return;\r\n//   }\r\n\r\n\r\n//   // Convert the selected photo to base64\r\n//   convertImageToBase64(photo)\r\n//     .then((photoBase64) => {\r\n//       // Prepare the data to be sent to the server for registration\r\n//       const formData = new FormData();\r\n//       formData.append(\"name\", name);\r\n//       formData.append(\"firstname\", firstname);\r\n//       formData.append(\"contact\", contact);\r\n//       formData.append(\"speciality\", speciality);\r\n//       formData.append(\"experience\", experience);\r\n//       formData.append(\"email\", email);\r\n//       formData.append(\"password\", password);\r\n//       formData.append(\"Role\", selectedRole);\r\n//       formData.append(\"photo\", {\r\n//         uri: photo,\r\n//         name: \"photo.jpg\",\r\n//         type: \"image/jpeg\", // Adjust the content type based on your image type\r\n//       }); // Add the base64 image data or an empty string\r\n\r\n//       console.log(formData);\r\n\r\n//       axios.post(\"http://127.0.0.1:3000/doctor/inscriptionDoctor\", formData, {\r\n//         headers: {\r\n//           \"Content-Type\": \"multipart/form-data\",\r\n//         },\r\n//       })\r\n//       .then((response) => {\r\n//         console.log(response.data);\r\n//         Alert.alert(\"Success\", \"Registration successful\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(error);\r\n//         Alert.alert(\"Error\", \"Registration failed\");\r\n//       });\r\n//     })\r\n//     .catch((error) => {\r\n//       console.error(error);\r\n//       Alert.alert(\"Error\", \"Failed to convert image to base64\");\r\n//     });\r\n// };\r\n//   return (\r\n//     <View style={{ flex: 1, backgroundColor: \"white\", paddingHorizontal: 20, paddingTop: 20 }}>\r\n//       <Text style={{ fontSize: 30 }}>Sign Up</Text>\r\n//       <View style={{ marginTop: 20 }}>\r\n//         <Text>Photo:</Text>\r\n//         {photo && (\r\n//           <Image\r\n//             source={photo}\r\n//             style={{ width: 100, height: 100 }}\r\n//           />\r\n//         )}\r\n//         <TouchableOpacity\r\n//           style={{ backgroundColor: \"blue\", borderRadius: 20, padding: 15, alignItems: \"center\" }}\r\n//           onPress={selectPhoto}\r\n//         >\r\n//           <Text style={{ color: \"white\", fontWeight: \"bold\", fontSize: 20 }}>Select Photo</Text>\r\n//         </TouchableOpacity>\r\n\r\n//         <Text>Nom :</Text>\r\n//         <TextInput\r\n//           style={{ padding: 10, backgroundColor: \"lightgray\", borderRadius: 10, marginBottom: 10 }}\r\n//           placeholder=\"raharimanana\"\r\n//           onChangeText={(text) => setName(text)}\r\n//         />\r\n//         <Text>Prénoms :</Text>\r\n//         <TextInput\r\n//           style={{ padding: 10, backgroundColor: \"lightgray\", borderRadius: 10, marginBottom: 10 }}\r\n//           placeholder=\"fabiola\"\r\n//           onChangeText={(text) => setFirstname(text)}\r\n//         />\r\n//         <Text>Contact:</Text>\r\n//         <TextInput\r\n//           style={{ padding: 10, backgroundColor: \"lightgray\", borderRadius: 10, marginBottom: 10 }}\r\n//           placeholder=\"contact\"\r\n//           onChangeText={(text) => setContact(text)}\r\n//         />\r\n//         <Text>Speciality:</Text>\r\n//         <TextInput\r\n//           style={{ padding: 10, backgroundColor: \"lightgray\", borderRadius: 10, marginBottom: 10 }}\r\n//           placeholder=\"specialité\"\r\n//           onChangeText={(text) => setSpeciality(text)}\r\n//         />\r\n//         <Text>Experience:</Text>\r\n//         <TextInput\r\n//           style={{ padding: 10, backgroundColor: \"lightgray\", borderRadius: 10, marginBottom: 10 }}\r\n//           placeholder=\"experience\"\r\n//           onChangeText={(text) => setExperience(text)}\r\n//         />\r\n//         <Text>Email Address:</Text>\r\n//         <TextInput\r\n//           style={{ padding: 10, backgroundColor: \"lightgray\", borderRadius: 10, marginBottom: 10 }}\r\n//           placeholder=\"email\"\r\n//           onChangeText={(text) => setEmail(text)}\r\n//         />\r\n//         <Text>Password:</Text>\r\n//         <TextInput\r\n//           style={{ padding: 10, backgroundColor: \"lightgray\", borderRadius: 10, marginBottom: 10 }}\r\n//           secureTextEntry\r\n//           placeholder=\"mot de passe\"\r\n//           onChangeText={(text) => setPassword(text)}\r\n//         />\r\n\r\n//         <Text>Role:</Text>\r\n//         <Picker\r\n//           style={{\r\n//             padding: 10,\r\n//             backgroundColor: \"lightgray\",\r\n//             borderRadius: 10,\r\n//             marginBottom: 10,\r\n//           }}\r\n//           selectedValue={selectedRole}\r\n//           onValueChange={(itemValue, itemIndex) => setSelectedRole(itemValue)}\r\n//         >\r\n//           <Picker.Item label=\"Select a Role\" value=\"\" />\r\n//           {roletenaizy.map((role) => (\r\n//             <Picker.Item\r\n//               key={role._id}\r\n//               label={role.RoleTitle}\r\n//               value={role._id}\r\n//             />\r\n//           ))}\r\n//         </Picker>\r\n\r\n//         <TouchableOpacity\r\n//           style={{ backgroundColor: \"blue\", borderRadius: 20, padding: 15, alignItems: \"center\" }}\r\n//           onPress={handleSubmit}\r\n//         >\r\n//           <Text style={{ color: \"white\", fontWeight: \"bold\", fontSize: 20 }}>Sign Up</Text>\r\n//         </TouchableOpacity>\r\n//       </View>\r\n//     </View>\r\n//   );\r\n// };\r\n"],"mappings":""},"metadata":{},"sourceType":"script","externalDependencies":[]}