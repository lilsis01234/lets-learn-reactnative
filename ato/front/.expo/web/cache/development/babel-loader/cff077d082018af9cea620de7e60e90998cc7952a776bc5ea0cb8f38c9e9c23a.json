{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect } from 'react-redux';\nimport { updateUser } from \"../Crud\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EditUserForm = function EditUserForm(_ref) {\n  var dispatch = _ref.dispatch,\n    user = _ref.user;\n  var _useState = useState(user.id),\n    _useState2 = _slicedToArray(_useState, 2),\n    id = _useState2[0],\n    setId = _useState2[1];\n  var _useState3 = useState(user.nom),\n    _useState4 = _slicedToArray(_useState3, 2),\n    nom = _useState4[0],\n    setNom = _useState4[1];\n  var _useState5 = useState(user.prenom),\n    _useState6 = _slicedToArray(_useState5, 2),\n    prenom = _useState6[0],\n    setPrenom = _useState6[1];\n  var _useState7 = useState(user.age),\n    _useState8 = _slicedToArray(_useState7, 2),\n    age = _useState8[0],\n    setAge = _useState8[1];\n  var _useState9 = useState(user.usernom),\n    _useState10 = _slicedToArray(_useState9, 2),\n    usernom = _useState10[0],\n    setUsernom = _useState10[1];\n  var handleSubmit = function handleSubmit() {\n    dispatch(updateUser(user.usernom, {\n      id: id,\n      nom: nom,\n      prenom: prenom,\n      age: age,\n      usernom: usernom\n    }));\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"id\",\n      value: id,\n      onChangeText: setId\n    }), _jsx(TextInput, {\n      placeholder: \"Nom\",\n      value: nom,\n      onChangeText: setNom\n    }), _jsx(TextInput, {\n      placeholder: \"Pr\\xE9nom\",\n      value: prenom,\n      onChangeText: setPrenom\n    }), _jsx(TextInput, {\n      placeholder: \"Age\",\n      value: age.toString(),\n      onChangeText: setAge\n    }), _jsx(TextInput, {\n      placeholder: \"Usernom\",\n      value: usernom,\n      onChangeText: setUsernom\n    }), _jsx(Button, {\n      title: \"Save\",\n      onPress: handleSubmit\n    })]\n  });\n};\nexport default connect()(EditUserForm);","map":{"version":3,"names":["React","useState","View","TextInput","Button","connect","updateUser","jsx","_jsx","jsxs","_jsxs","EditUserForm","_ref","dispatch","user","_useState","id","_useState2","_slicedToArray","setId","_useState3","nom","_useState4","setNom","_useState5","prenom","_useState6","setPrenom","_useState7","age","_useState8","setAge","_useState9","usernom","_useState10","setUsernom","handleSubmit","children","placeholder","value","onChangeText","toString","title","onPress"],"sources":["C:/Users/Fabiola/Documents/front/components/Crud/Components/EditUserForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { updateUser } from '../Crud';\r\n\r\nconst EditUserForm = ({ dispatch, user }) => {\r\n  const [id, setId] = useState(user.id);\r\n  const [nom, setNom] = useState(user.nom);\r\n  const [prenom, setPrenom] = useState(user.prenom);\r\n  const [age, setAge] = useState(user.age);\r\n  const [usernom, setUsernom] = useState(user.usernom);\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(updateUser(user.usernom, { id, nom, prenom, age, usernom }));\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TextInput placeholder=\"id\" value={id} onChangeText={setId} />\r\n      <TextInput placeholder=\"Nom\" value={nom} onChangeText={setNom} />\r\n      <TextInput placeholder=\"PrÃ©nom\" value={prenom} onChangeText={setPrenom} />\r\n      <TextInput placeholder=\"Age\" value={age.toString()} onChangeText={setAge} />\r\n      <TextInput placeholder=\"Usernom\" value={usernom} onChangeText={setUsernom} />\r\n      <Button title=\"Save\" onPress={handleSubmit} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default connect()(EditUserForm);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAExC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAA2B;EAAA,IAArBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;EACpC,IAAAC,SAAA,GAAoBd,QAAQ,CAACa,IAAI,CAACE,EAAE,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA9BC,EAAE,GAAAC,UAAA;IAAEE,KAAK,GAAAF,UAAA;EAChB,IAAAG,UAAA,GAAsBnB,QAAQ,CAACa,IAAI,CAACO,GAAG,CAAC;IAAAC,UAAA,GAAAJ,cAAA,CAAAE,UAAA;IAAjCC,GAAG,GAAAC,UAAA;IAAEC,MAAM,GAAAD,UAAA;EAClB,IAAAE,UAAA,GAA4BvB,QAAQ,CAACa,IAAI,CAACW,MAAM,CAAC;IAAAC,UAAA,GAAAR,cAAA,CAAAM,UAAA;IAA1CC,MAAM,GAAAC,UAAA;IAAEC,SAAS,GAAAD,UAAA;EACxB,IAAAE,UAAA,GAAsB3B,QAAQ,CAACa,IAAI,CAACe,GAAG,CAAC;IAAAC,UAAA,GAAAZ,cAAA,CAAAU,UAAA;IAAjCC,GAAG,GAAAC,UAAA;IAAEC,MAAM,GAAAD,UAAA;EAClB,IAAAE,UAAA,GAA8B/B,QAAQ,CAACa,IAAI,CAACmB,OAAO,CAAC;IAAAC,WAAA,GAAAhB,cAAA,CAAAc,UAAA;IAA7CC,OAAO,GAAAC,WAAA;IAAEC,UAAU,GAAAD,WAAA;EAE1B,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBvB,QAAQ,CAACP,UAAU,CAACQ,IAAI,CAACmB,OAAO,EAAE;MAAEjB,EAAE,EAAFA,EAAE;MAAEK,GAAG,EAAHA,GAAG;MAAEI,MAAM,EAANA,MAAM;MAAEI,GAAG,EAAHA,GAAG;MAAEI,OAAO,EAAPA;IAAQ,CAAC,CAAC,CAAC;EACvE,CAAC;EAED,OACEvB,KAAA,CAACR,IAAI;IAAAmC,QAAA,GACH7B,IAAA,CAACL,SAAS;MAACmC,WAAW,EAAC,IAAI;MAACC,KAAK,EAAEvB,EAAG;MAACwB,YAAY,EAAErB;IAAM,CAAE,CAAC,EAC9DX,IAAA,CAACL,SAAS;MAACmC,WAAW,EAAC,KAAK;MAACC,KAAK,EAAElB,GAAI;MAACmB,YAAY,EAAEjB;IAAO,CAAE,CAAC,EACjEf,IAAA,CAACL,SAAS;MAACmC,WAAW,EAAC,WAAQ;MAACC,KAAK,EAAEd,MAAO;MAACe,YAAY,EAAEb;IAAU,CAAE,CAAC,EAC1EnB,IAAA,CAACL,SAAS;MAACmC,WAAW,EAAC,KAAK;MAACC,KAAK,EAAEV,GAAG,CAACY,QAAQ,CAAC,CAAE;MAACD,YAAY,EAAET;IAAO,CAAE,CAAC,EAC5EvB,IAAA,CAACL,SAAS;MAACmC,WAAW,EAAC,SAAS;MAACC,KAAK,EAAEN,OAAQ;MAACO,YAAY,EAAEL;IAAW,CAAE,CAAC,EAC7E3B,IAAA,CAACJ,MAAM;MAACsC,KAAK,EAAC,MAAM;MAACC,OAAO,EAAEP;IAAa,CAAE,CAAC;EAAA,CAC1C,CAAC;AAEX,CAAC;AAED,eAAe/B,OAAO,CAAC,CAAC,CAACM,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}