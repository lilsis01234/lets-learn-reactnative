{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { connect } from 'react-redux';\nimport { addAnimal } from \"../Crud\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddAnimalForm = function AddAnimalForm(_ref) {\n  var dispatch = _ref.dispatch;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nom = _useState2[0],\n    setNom = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    type = _useState4[0],\n    setType = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    couleur = _useState6[0],\n    setCouleur = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    image = _useState8[0],\n    setImage = _useState8[1];\n  var handleSubmit = function handleSubmit() {\n    dispatch(addAnimal(nom, type, couleur, image));\n    setNom('');\n    setType('');\n    setCouleur('');\n    setImage('');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nom\",\n      value: nom,\n      onChangeText: setNom\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Type\",\n      value: type,\n      onChangeText: setType\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Couleur\",\n      value: couleur,\n      onChangeText: setCouleur\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Image\",\n      value: image,\n      onChangeText: setImage\n    }), _jsx(Button, {\n      title: \"Ajouter\",\n      onPress: handleSubmit\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    width: '100%'\n  }\n});\nexport default connect()(AddAnimalForm);\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","connect","addAnimal","jsx","_jsx","jsxs","_jsxs","AddAnimalForm","_ref","dispatch","_useState","_useState2","_slicedToArray","nom","setNom","_useState3","_useState4","type","setType","_useState5","_useState6","couleur","setCouleur","_useState7","_useState8","image","setImage","handleSubmit","style","styles","container","children","input","placeholder","value","onChangeText","title","onPress","create","flex","justifyContent","alignItems","padding","borderWidth","borderColor","borderRadius","marginBottom","width","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/Fabiola/Documents/front/components/Crud/Components/AddAnimalForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { addAnimal } from '../Crud';\r\n\r\nconst AddAnimalForm = ({ dispatch }) => {\r\n  const [nom, setNom] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [couleur, setCouleur] = useState('');\r\n  const [image, setImage] = useState('');\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(addAnimal(nom, type, couleur, image));\r\n    setNom('');\r\n    setType('');\r\n    setCouleur('');\r\n    setImage('');\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput style={styles.input} placeholder=\"Nom\" value={nom} onChangeText={setNom} />\r\n      <TextInput style={styles.input} placeholder=\"Type\" value={type} onChangeText={setType} />\r\n      <TextInput style={styles.input} placeholder=\"Couleur\" value={couleur} onChangeText={setCouleur} />\r\n      <TextInput style={styles.input} placeholder=\"Image\" value={image} onChangeText={setImage} />\r\n      <Button title=\"Ajouter\" onPress={handleSubmit} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport default connect()(AddAnimalForm);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,SAAS;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpC,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAC/B,IAAAC,SAAA,GAAsBd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3BG,GAAG,GAAAF,UAAA;IAAEG,MAAM,GAAAH,UAAA;EAClB,IAAAI,UAAA,GAAwBnB,QAAQ,CAAC,EAAE,CAAC;IAAAoB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,IAAAG,UAAA,GAA8BvB,QAAQ,CAAC,EAAE,CAAC;IAAAwB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA0B3B,QAAQ,CAAC,EAAE,CAAC;IAAA4B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtB,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBlB,QAAQ,CAACP,SAAS,CAACW,GAAG,EAAEI,IAAI,EAAEI,OAAO,EAAEI,KAAK,CAAC,CAAC;IAC9CX,MAAM,CAAC,EAAE,CAAC;IACVI,OAAO,CAAC,EAAE,CAAC;IACXI,UAAU,CAAC,EAAE,CAAC;IACdI,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,OACEpB,KAAA,CAACT,IAAI;IAAC+B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B3B,IAAA,CAACN,SAAS;MAAC8B,KAAK,EAAEC,MAAM,CAACG,KAAM;MAACC,WAAW,EAAC,KAAK;MAACC,KAAK,EAAErB,GAAI;MAACsB,YAAY,EAAErB;IAAO,CAAE,CAAC,EACtFV,IAAA,CAACN,SAAS;MAAC8B,KAAK,EAAEC,MAAM,CAACG,KAAM;MAACC,WAAW,EAAC,MAAM;MAACC,KAAK,EAAEjB,IAAK;MAACkB,YAAY,EAAEjB;IAAQ,CAAE,CAAC,EACzFd,IAAA,CAACN,SAAS;MAAC8B,KAAK,EAAEC,MAAM,CAACG,KAAM;MAACC,WAAW,EAAC,SAAS;MAACC,KAAK,EAAEb,OAAQ;MAACc,YAAY,EAAEb;IAAW,CAAE,CAAC,EAClGlB,IAAA,CAACN,SAAS;MAAC8B,KAAK,EAAEC,MAAM,CAACG,KAAM;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAET,KAAM;MAACU,YAAY,EAAET;IAAS,CAAE,CAAC,EAC5FtB,IAAA,CAACL,MAAM;MAACqC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEV;IAAa,CAAE,CAAC;EAAA,CAC7C,CAAC;AAEX,CAAC;AAED,IAAME,MAAM,GAAG7B,UAAU,CAACsC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACDV,KAAK,EAAE;IACLW,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfH,OAAO,EAAE,EAAE;IACXI,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe9C,OAAO,CAAC,CAAC,CAACM,aAAa,CAAC;AAACyC,qBAAA,CAAAV,MAAA;EAAAT,MAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;EAAAoB,OAAA;IAAA;EAAA;EAAAC,MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}