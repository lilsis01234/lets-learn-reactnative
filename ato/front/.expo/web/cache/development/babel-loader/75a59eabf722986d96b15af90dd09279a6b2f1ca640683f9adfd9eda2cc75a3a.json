{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect } from 'react-redux';\nimport { addAnimal } from \"../Crud\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddAnimalForm = function AddAnimalForm(_ref) {\n  var dispatch = _ref.dispatch;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nom = _useState2[0],\n    setNom = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    type = _useState4[0],\n    setType = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    couleur = _useState6[0],\n    setCouleur = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    image = _useState8[0],\n    setImage = _useState8[1];\n  var handleSubmit = function handleSubmit() {\n    dispatch(addAnimal(nom, type, couleur, image));\n    setNom('');\n    setType('');\n    setCouleur('');\n    setImage('');\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Nom\",\n      value: nom,\n      onChangeText: setNom\n    }), _jsx(TextInput, {\n      placeholder: \"Type\",\n      value: type,\n      onChangeText: setType\n    }), _jsx(TextInput, {\n      placeholder: \"Couleur\",\n      value: couleur,\n      onChangeText: setCouleur\n    }), _jsx(TextInput, {\n      placeholder: \"Image\",\n      value: image,\n      onChangeText: setImage\n    }), _jsx(Button, {\n      title: \"Add Animal\",\n      onPress: handleSubmit\n    })]\n  });\n};\nexport default connect()(AddAnimalForm);","map":{"version":3,"names":["React","useState","View","TextInput","Button","connect","addAnimal","jsx","_jsx","jsxs","_jsxs","AddAnimalForm","_ref","dispatch","_useState","_useState2","_slicedToArray","nom","setNom","_useState3","_useState4","type","setType","_useState5","_useState6","couleur","setCouleur","_useState7","_useState8","image","setImage","handleSubmit","children","placeholder","value","onChangeText","title","onPress"],"sources":["C:/Users/Fabiola/Documents/front/components/Crud/Components/AddAnimalForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { addAnimal } from '../Crud';\r\n\r\nconst AddAnimalForm = ({ dispatch }) => {\r\n  const [nom, setNom] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [couleur, setCouleur] = useState('');\r\n  const [image, setImage] = useState('');\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(addAnimal(nom, type, couleur, image));\r\n    setNom('');\r\n    setType('');\r\n    setCouleur('');\r\n    setImage('');\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TextInput placeholder=\"Nom\" value={nom} onChangeText={setNom} />\r\n      <TextInput placeholder=\"Type\" value={type} onChangeText={setType} />\r\n      <TextInput placeholder=\"Couleur\" value={couleur} onChangeText={setCouleur} />\r\n      <TextInput placeholder=\"Image\" value={image} onChangeText={setImage} />\r\n      <Button title=\"Add Animal\" onPress={handleSubmit} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default connect()(AddAnimalForm);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAExC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,SAAS;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpC,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAC/B,IAAAC,SAAA,GAAsBb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3BG,GAAG,GAAAF,UAAA;IAAEG,MAAM,GAAAH,UAAA;EAClB,IAAAI,UAAA,GAAwBlB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,IAAAG,UAAA,GAA8BtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA0B1B,QAAQ,CAAC,EAAE,CAAC;IAAA2B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtB,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBlB,QAAQ,CAACP,SAAS,CAACW,GAAG,EAAEI,IAAI,EAAEI,OAAO,EAAEI,KAAK,CAAC,CAAC;IAC9CX,MAAM,CAAC,EAAE,CAAC;IACVI,OAAO,CAAC,EAAE,CAAC;IACXI,UAAU,CAAC,EAAE,CAAC;IACdI,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,OACEpB,KAAA,CAACR,IAAI;IAAA8B,QAAA,GACHxB,IAAA,CAACL,SAAS;MAAC8B,WAAW,EAAC,KAAK;MAACC,KAAK,EAAEjB,GAAI;MAACkB,YAAY,EAAEjB;IAAO,CAAE,CAAC,EACjEV,IAAA,CAACL,SAAS;MAAC8B,WAAW,EAAC,MAAM;MAACC,KAAK,EAAEb,IAAK;MAACc,YAAY,EAAEb;IAAQ,CAAE,CAAC,EACpEd,IAAA,CAACL,SAAS;MAAC8B,WAAW,EAAC,SAAS;MAACC,KAAK,EAAET,OAAQ;MAACU,YAAY,EAAET;IAAW,CAAE,CAAC,EAC7ElB,IAAA,CAACL,SAAS;MAAC8B,WAAW,EAAC,OAAO;MAACC,KAAK,EAAEL,KAAM;MAACM,YAAY,EAAEL;IAAS,CAAE,CAAC,EACvEtB,IAAA,CAACJ,MAAM;MAACgC,KAAK,EAAC,YAAY;MAACC,OAAO,EAAEN;IAAa,CAAE,CAAC;EAAA,CAChD,CAAC;AAEX,CAAC;AAED,eAAe1B,OAAO,CAAC,CAAC,CAACM,aAAa,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}