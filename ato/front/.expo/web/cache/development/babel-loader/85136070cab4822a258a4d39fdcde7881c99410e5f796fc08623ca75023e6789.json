{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport store from \"./Store\";\nimport AnimalList from \"./Components/AnimalList\";\nimport AddAnimalForm from \"./Components/AddAnimalForm\";\nimport { addAnimal } from \"./Crud\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar ListeAnimal = function ListeAnimal(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    authenticated = _useState2[0],\n    setAuthenticated = _useState2[1];\n  useEffect(function () {\n    var isAuthenticated = localStorage.getItem('authenticated');\n    if (!isAuthenticated) {\n      navigation.navigate('Login');\n    } else {\n      setAuthenticated(true);\n      store.dispatch(addAnimal('1', 'Dog', 'Labrador', 'Brown', 'https://images.rawpixel.com/image_png_800/czNmcy1wcml2YXRlL3Jhd3BpeGVsX2ltYWdlcy93ZWJzaXRlX2NvbnRlbnQvcHUyMzMxNzg4LWltYWdlLXJtNTAzLTAxXzEtbDBqOXFyYzMucG5n.png'));\n      store.dispatch(addAnimal('2', 'Cat', 'Siamese', 'White', 'https://images.rawpixel.com/image_png_800/czNmcy1wcml2YXRlL3Jhd3BpeGVsX2ltYWdlcy93ZWJzaXRlX2NvbnRlbnQvcHUyMzMxNjM2LWltYWdlLTAxLXJtNTAzXzMtbDBqOXFrNnEucG5n.png'));\n    }\n  }, []);\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"AnimalList\",\n          component: AnimalList,\n          options: {\n            title: 'Animal List',\n            headerRight: function headerRight() {\n              return _jsx(TouchableOpacity, {\n                style: {\n                  marginRight: 20\n                },\n                onPress: function onPress() {\n                  return navigation.navigate('AddAnimalForm');\n                },\n                children: _jsx(Text, {\n                  style: {\n                    color: 'white',\n                    fontSize: 24\n                  },\n                  children: \"+\"\n                })\n              });\n            },\n            headerStyle: {\n              backgroundColor: 'rgb(239, 135, 11)'\n            },\n            headerTintColor: 'white'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AddAnimalForm\",\n          component: AddAnimalForm\n        }), \" \"]\n      })\n    })\n  });\n};\nexport default ListeAnimal;","map":{"version":3,"names":["React","useState","useEffect","Provider","TouchableOpacity","Text","createStackNavigator","NavigationContainer","store","AnimalList","AddAnimalForm","addAnimal","jsx","_jsx","jsxs","_jsxs","Stack","ListeAnimal","_ref","navigation","_useState","_useState2","_slicedToArray","authenticated","setAuthenticated","isAuthenticated","localStorage","getItem","navigate","dispatch","children","Navigator","Screen","name","component","options","title","headerRight","style","marginRight","onPress","color","fontSize","headerStyle","backgroundColor","headerTintColor"],"sources":["C:/Users/Fabiola/Documents/front/components/Crud/Components/AddAnimalForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { TouchableOpacity, Text } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack'; \r\nimport { NavigationContainer } from '@react-navigation/native'; // Import NavigationContainer\r\nimport store from './Store';\r\nimport AnimalList from './Components/AnimalList';\r\nimport AddAnimalForm from './Components/AddAnimalForm'; // Import AddAnimalForm\r\nimport { addAnimal } from './Crud'; // Import the addAnimal action\r\n\r\nconst Stack = createStackNavigator(); // Create a Stack Navigator\r\n\r\nconst ListeAnimal = ({ navigation }) => {\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const isAuthenticated = localStorage.getItem('authenticated');\r\n    if (!isAuthenticated) {\r\n      navigation.navigate('Login');\r\n    } else {\r\n      setAuthenticated(true);\r\n      store.dispatch(addAnimal('1', 'Dog', 'Labrador', 'Brown', 'https://images.rawpixel.com/image_png_800/czNmcy1wcml2YXRlL3Jhd3BpeGVsX2ltYWdlcy93ZWJzaXRlX2NvbnRlbnQvcHUyMzMxNzg4LWltYWdlLXJtNTAzLTAxXzEtbDBqOXFyYzMucG5n.png'));\r\n      store.dispatch(addAnimal('2', 'Cat', 'Siamese', 'White', 'https://images.rawpixel.com/image_png_800/czNmcy1wcml2YXRlL3Jhd3BpeGVsX2ltYWdlcy93ZWJzaXRlX2NvbnRlbnQvcHUyMzMxNjM2LWltYWdlLTAxLXJtNTAzXzMtbDBqOXFrNnEucG5n.png'));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          <Stack.Screen\r\n            name=\"AnimalList\"\r\n            component={AnimalList}\r\n            options={{\r\n              title: 'Animal List',\r\n              headerRight: () => (\r\n                <TouchableOpacity\r\n                  style={{ marginRight: 20 }}\r\n                  onPress={() => navigation.navigate('AddAnimalForm')} // Navigate to AddAnimalForm\r\n                >\r\n                  <Text style={{ color: 'white', fontSize: 24 }}>+</Text>\r\n                </TouchableOpacity>\r\n              ),\r\n              headerStyle: {\r\n                backgroundColor: 'rgb(239, 135, 11)',\r\n              },\r\n              headerTintColor: 'white',\r\n            }}\r\n          />\r\n          <Stack.Screen name=\"AddAnimalForm\" component={AddAnimalForm} /> {/* Add AddAnimalForm as a screen */}\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ListeAnimal;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,aAAa;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAEvC,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,KAAK;AACZ,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,SAASC,SAAS;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnC,IAAMC,KAAK,GAAGV,oBAAoB,CAAC,CAAC;AAEpC,IAAMW,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC/B,IAAAC,SAAA,GAA0CnB,QAAQ,CAAC,KAAK,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtCnB,SAAS,CAAC,YAAM;IACd,IAAMuB,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC7D,IAAI,CAACF,eAAe,EAAE;MACpBN,UAAU,CAACS,QAAQ,CAAC,OAAO,CAAC;IAC9B,CAAC,MAAM;MACLJ,gBAAgB,CAAC,IAAI,CAAC;MACtBhB,KAAK,CAACqB,QAAQ,CAAClB,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,gKAAgK,CAAC,CAAC;MAC5NH,KAAK,CAACqB,QAAQ,CAAClB,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,gKAAgK,CAAC,CAAC;IAC7N;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OACEE,IAAA,CAACV,QAAQ;IAACK,KAAK,EAAEA,KAAM;IAAAsB,QAAA,EACrBjB,IAAA,CAACN,mBAAmB;MAAAuB,QAAA,EAClBf,KAAA,CAACC,KAAK,CAACe,SAAS;QAAAD,QAAA,GACdjB,IAAA,CAACG,KAAK,CAACgB,MAAM;UACXC,IAAI,EAAC,YAAY;UACjBC,SAAS,EAAEzB,UAAW;UACtB0B,OAAO,EAAE;YACPC,KAAK,EAAE,aAAa;YACpBC,WAAW,EAAE,SAAAA,YAAA;cAAA,OACXxB,IAAA,CAACT,gBAAgB;gBACfkC,KAAK,EAAE;kBAAEC,WAAW,EAAE;gBAAG,CAAE;gBAC3BC,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAMrB,UAAU,CAACS,QAAQ,CAAC,eAAe,CAAC;gBAAA,CAAC;gBAAAE,QAAA,EAEpDjB,IAAA,CAACR,IAAI;kBAACiC,KAAK,EAAE;oBAAEG,KAAK,EAAE,OAAO;oBAAEC,QAAQ,EAAE;kBAAG,CAAE;kBAAAZ,QAAA,EAAC;gBAAC,CAAM;cAAC,CACvC,CAAC;YAAA,CACpB;YACDa,WAAW,EAAE;cACXC,eAAe,EAAE;YACnB,CAAC;YACDC,eAAe,EAAE;UACnB;QAAE,CACH,CAAC,EACFhC,IAAA,CAACG,KAAK,CAACgB,MAAM;UAACC,IAAI,EAAC,eAAe;UAACC,SAAS,EAAExB;QAAc,CAAE,CAAC,KAAC;MAAA,CACjD;IAAC,CACC;EAAC,CACd,CAAC;AAEf,CAAC;AAED,eAAeO,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}