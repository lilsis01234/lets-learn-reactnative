{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { s } from \"./CardDoctor.style\";\nimport React, { useEffect, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CardDoctors = function CardDoctors() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    doctors = _useState2[0],\n    setDoctors = _useState2[1];\n  useEffect(function () {\n    axios.get('http://127.0.0.1:3000/doctor/allDoctor').then(function (response) {\n      setDoctors(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n  console.log(doctors);\n  return _jsx(View, {\n    style: s.form,\n    children: doctors.map(function (doctor, index) {\n      return _jsxs(View, {\n        style: s.form1,\n        children: [_jsx(View, {\n          style: s.image,\n          ClassName: \"flex-row justify-center -mt-14\",\n          children: _jsx(Image, {\n            style: s.photo,\n            source: {\n              uri: `http://localhost:3000/uploads/${doctor.photo}`\n            }\n          })\n        }), _jsxs(Text, {\n          style: s.text,\n          children: [_jsx(Text, {\n            style: s.text2,\n            children: \" Name \"\n          }), \" \", doctor.name, \" \", doctor.firstname, _jsx(\"br\", {}), _jsx(Text, {\n            style: s.text2,\n            children: \" firstname:\"\n          }), \" \", doctor.speciality, _jsx(\"br\", {}), _jsx(Text, {\n            style: s.text2,\n            children: \" specialit\\xE9 \"\n          }), doctor.contact]\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            navigation.navigate('callScreen', {\n              doctorId: doctor._id\n            });\n          },\n          children: _jsx(Text, {\n            children: \"Appeler\"\n          })\n        })]\n      }, index);\n    })\n  });\n};\nexport default CardDoctors;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"-mt-14\": {\n      \"marginTop\": -56\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    }\n  }\n});","map":{"version":3,"names":["s","React","useEffect","useState","Image","Text","View","TouchableOpacity","axios","jsx","_jsx","jsxs","_jsxs","CardDoctors","_useState","_useState2","_slicedToArray","doctors","setDoctors","get","then","response","data","catch","error","console","log","style","form","children","map","doctor","index","form1","image","ClassName","photo","source","uri","text","text2","name","firstname","speciality","contact","onPress","navigation","navigate","doctorId","_id","_NativeWindStyleSheet","create","styles"],"sources":["C:/Users/Fabiola/Desktop/projet/front/components/CardDoctor/CardDoctorList.jsx"],"sourcesContent":["import { s } from \"./CardDoctor.style\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Image, Text, View, TouchableOpacity } from \"react-native\";\r\nimport axios from \"axios\"; // Import axios for making API requests\r\n\r\nconst CardDoctors=()=> {\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Make an API request to fetch data from the backend\r\n    axios.get('http://127.0.0.1:3000/doctor/allDoctor') // Add \"http://\" before the URL\r\n      .then((response) => {\r\n        // Store the fetched data in the state\r\n        setDoctors(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []); // Empty dependency array ensures the effect runs only once, when the component mounts\r\n\r\n  console.log(doctors)\r\n  return (\r\n    <View style={s.form}>\r\n      {doctors.map((doctor, index) => (\r\n        <View key={index} style={s.form1}>\r\n          <View style={s.image} ClassName=\"flex-row justify-center -mt-14\">\r\n            <Image style={s.photo} source={{ uri: `http://localhost:3000/uploads/${doctor.photo}` }} />\r\n          </View>\r\n          <Text style={s.text}>\r\n            <Text style={s.text2}> Name </Text> {doctor.name} {doctor.firstname}\r\n            <br />\r\n            <Text style={s.text2}> firstname:</Text> {doctor.speciality}\r\n            <br />\r\n            <Text style={s.text2}> specialit√© </Text>\r\n            {doctor.contact}\r\n          </Text>\r\n          <TouchableOpacity\r\n              onPress={() => {\r\n              navigation.navigate('callScreen', { doctorId: doctor._id });\r\n           }}\r\n    >\r\n          <Text>Appeler</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      ))}\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default CardDoctors\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}