{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _setFullscreen;\nimport ExponentAV from \"./ExponentAV\";\nimport { requestFullscreen, exitFullscreen } from \"./FullscreenUtils.web\";\nexport default {\n  get name() {\n    return 'ExpoVideoManager';\n  },\n  get ScaleNone() {\n    return 'none';\n  },\n  get ScaleToFill() {\n    return 'fill';\n  },\n  get ScaleAspectFit() {\n    return 'contain';\n  },\n  get ScaleAspectFill() {\n    return 'cover';\n  },\n  setFullscreen: function setFullscreen(_x, _x2) {\n    return (_setFullscreen = _setFullscreen || _asyncToGenerator(function* (element, isFullScreenEnabled) {\n      if (isFullScreenEnabled) {\n        yield requestFullscreen(element);\n      } else {\n        yield exitFullscreen(element);\n      }\n      return ExponentAV.getStatusForVideo(element);\n    })).apply(this, arguments);\n  }\n};","map":{"version":3,"names":["ExponentAV","requestFullscreen","exitFullscreen","name","ScaleNone","ScaleToFill","ScaleAspectFit","ScaleAspectFill","setFullscreen","_x","_x2","_setFullscreen","_asyncToGenerator","element","isFullScreenEnabled","getStatusForVideo","apply","arguments"],"sources":["C:\\Users\\Fabiola\\Music\\desktop\\projet\\front\\node_modules\\expo-av\\src\\ExpoVideoManager.web.ts"],"sourcesContent":["import { AVPlaybackStatus } from './AV';\nimport ExponentAV from './ExponentAV';\nimport { requestFullscreen, exitFullscreen } from './FullscreenUtils.web';\n\nexport default {\n  get name(): string {\n    return 'ExpoVideoManager';\n  },\n  get ScaleNone(): string {\n    return 'none';\n  },\n  get ScaleToFill(): string {\n    return 'fill';\n  },\n  get ScaleAspectFit(): string {\n    return 'contain';\n  },\n  get ScaleAspectFill(): string {\n    return 'cover';\n  },\n\n  async setFullscreen(\n    element: HTMLMediaElement,\n    isFullScreenEnabled: boolean\n  ): Promise<AVPlaybackStatus> {\n    if (isFullScreenEnabled) {\n      await requestFullscreen(element);\n    } else {\n      await exitFullscreen(element);\n    }\n    return ExponentAV.getStatusForVideo(element);\n  },\n};\n"],"mappings":";;AACA,OAAOA,UAAU;AACjB,SAASC,iBAAiB,EAAEC,cAAc;AAE1C,eAAe;EACb,IAAIC,IAAIA,CAAA;IACN,OAAO,kBAAkB;EAC3B,CAAC;EACD,IAAIC,SAASA,CAAA;IACX,OAAO,MAAM;EACf,CAAC;EACD,IAAIC,WAAWA,CAAA;IACb,OAAO,MAAM;EACf,CAAC;EACD,IAAIC,cAAcA,CAAA;IAChB,OAAO,SAAS;EAClB,CAAC;EACD,IAAIC,eAAeA,CAAA;IACjB,OAAO,OAAO;EAChB,CAAC;EAEKC,aAAa,WAAAA,cAAAC,EAAA,EAAAC,GAAA;IAAA,QAAAC,cAAA,GAAAA,cAAA,IAAAC,iBAAA,YACjBC,OAAyB,EACzBC,mBAA4B;MAE5B,IAAIA,mBAAmB,EAAE;QACvB,MAAMb,iBAAiB,CAACY,OAAO,CAAC;OACjC,MAAM;QACL,MAAMX,cAAc,CAACW,OAAO,CAAC;;MAE/B,OAAOb,UAAU,CAACe,iBAAiB,CAACF,OAAO,CAAC;IAC9C,CAAC,GAAAG,KAAA,OAAAC,SAAA;EAAA;CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}