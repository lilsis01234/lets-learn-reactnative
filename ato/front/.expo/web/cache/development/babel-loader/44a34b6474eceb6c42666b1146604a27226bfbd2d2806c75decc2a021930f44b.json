{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from 'react-redux';\nimport { deleteAnimal } from \"../Crud\";\nimport EditAnimalForm from \"./EditAnimalForm\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar AnimalList = function AnimalList(_ref) {\n  var animals = _ref.animals,\n    dispatch = _ref.dispatch;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    editingAnimal = _useState2[0],\n    setEditingAnimal = _useState2[1];\n  var handleEdit = function handleEdit(animal) {\n    setEditingAnimal(animal);\n  };\n  var handleCancelEdit = function handleCancelEdit() {\n    setEditingAnimal(null);\n  };\n  var styles = StyleSheet.create({});\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: animals,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsxs(_Fragment, {\n          children: [_jsxs(View, {\n            style: item.id % 2 === 0 ? styles.grey : styles.white,\n            children: [_jsx(Image, {\n              source: {\n                uri: item.photo\n              },\n              style: {\n                width: 50,\n                height: 50\n              }\n            }), _jsx(Text, {\n              children: item.nom\n            }), _jsx(Text, {\n              children: item.type\n            }), _jsx(Text, {\n              children: item.couleur\n            }), _jsx(Text, {\n              children: item.id\n            }), _jsx(Button, {\n              title: \"Delete\",\n              onPress: function onPress() {\n                return dispatch(deleteAnimal(item.id));\n              }\n            }), _jsx(Button, {\n              title: \"Edit\",\n              onPress: function onPress() {\n                return handleEdit(item);\n              }\n            })]\n          }), editingAnimal && editingAnimal.id === item.id && _jsxs(View, {\n            children: [_jsx(EditAnimalForm, {\n              animal: editingAnimal\n            }), _jsx(Button, {\n              title: \"Cancel\",\n              onPress: handleCancelEdit\n            })]\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    })\n  });\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    animals: state.animals\n  };\n};\nexport default connect(mapStateToProps)(AnimalList);","map":{"version":3,"names":["React","useState","View","Text","FlatList","Button","StyleSheet","Image","connect","deleteAnimal","EditAnimalForm","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AnimalList","_ref","animals","dispatch","_useState","_useState2","_slicedToArray","editingAnimal","setEditingAnimal","handleEdit","animal","handleCancelEdit","styles","create","children","data","renderItem","_ref2","item","style","id","grey","white","source","uri","photo","width","height","nom","type","couleur","title","onPress","keyExtractor","toString","mapStateToProps","state"],"sources":["C:/Users/Fabiola/Documents/front/components/Crud/Components/AnimalList.js"],"sourcesContent":["// AnimalList.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, FlatList, Button, StyleSheet, Image } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { deleteAnimal } from '../Crud';\r\nimport EditAnimalForm from './EditAnimalForm'; \r\n\r\nconst AnimalList = ({ animals, dispatch }) => {\r\n  const [editingAnimal, setEditingAnimal] = useState(null);\r\n\r\n  const handleEdit = (animal) => {\r\n    setEditingAnimal(animal); \r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingAnimal(null); \r\n  };\r\n\r\n  const styles = StyleSheet.create({\r\n    // Your styles here\r\n  });\r\n\r\n  return (\r\n    <View>\r\n      <FlatList\r\n        data={animals}\r\n        renderItem={({ item }) => (\r\n          <>\r\n            <View style={item.id % 2 === 0 ? styles.grey : styles.white}>\r\n              <Image source={{ uri: item.photo }} style={{ width: 50, height: 50 }} />\r\n              <Text>{item.nom}</Text>\r\n              <Text>{item.type}</Text>\r\n              <Text>{item.couleur}</Text>\r\n              <Text>{item.id}</Text>\r\n              <Button title=\"Delete\" onPress={() => dispatch(deleteAnimal(item.id))} />\r\n              <Button title=\"Edit\" onPress={() => handleEdit(item)} />\r\n            </View>\r\n            {editingAnimal && editingAnimal.id === item.id && (\r\n              <View>\r\n                <EditAnimalForm animal={editingAnimal} />\r\n                <Button title=\"Cancel\" onPress={handleCancelEdit} /> \r\n              </View>\r\n            )}\r\n          </>\r\n        )}\r\n        keyExtractor={(item) => item.id.toString()}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  animals: state.animals,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AnimalList);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}