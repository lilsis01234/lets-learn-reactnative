{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginPatientScreen = function LoginPatientScreen(_ref) {\n  var _ref2;\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post(\"http://127.0.0.1:3000/auth/loginPatient\", {\n          email: email,\n          password: password\n        });\n        if (response.status === 200) {\n          console.log(\"Login Response Data:\", response.data);\n          localStorage.setItem('token', res.data.token);\n          localStorage.setItem('id', res.data.Id);\n          localStorage.setItem('etat', res.data.etat);\n          navigation.navigate(\"home\");\n          navigation.navigate(\"home\");\n        } else {\n          Alert.alert(\"Login Failed\", \"Invalid email or password\");\n        }\n      } catch (error) {\n        console.error(error);\n        Alert.alert(\"Error\", \"Login failed. Please try again later.\");\n      }\n    })).apply(this, arguments);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Veuillez vous connecter\"\n    }), _jsx(Text, {\n      children: \"Votre email :\"\n    }), _jsx(TextInput, {\n      style: {\n        padding: 10,\n        backgroundColor: \"lightgray\",\n        borderRadius: 10,\n        marginBottom: 10\n      },\n      placeholder: \"fabiola@fab.com\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(Text, {\n      children: \"Votre mot de passe:\"\n    }), _jsx(TextInput, {\n      style: {\n        padding: 10,\n        backgroundColor: \"lightgray\",\n        borderRadius: 10,\n        marginBottom: 10\n      },\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(Button, {\n      title: \"Se connecter\",\n      onPress: handleLogin\n    })]\n  });\n};\nexport default LoginPatientScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","Alert","axios","jsx","_jsx","jsxs","_jsxs","LoginPatientScreen","_ref","_ref2","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","_asyncToGenerator","response","post","status","console","log","data","localStorage","setItem","res","token","Id","etat","navigate","alert","error","apply","arguments","children","style","padding","backgroundColor","borderRadius","marginBottom","placeholder","onChangeText","text","secureTextEntry","title","onPress"],"sources":["C:/Users/Fabiola/Desktop/projet/front/components/Authentification/Login/LoginPatient.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, Button, Alert } from \"react-native\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginPatientScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n \r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:3000/auth/loginPatient\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        console.log(\"Login Response Data:\", response.data);\r\n\r\n        localStorage.setItem('token',res.data.token)\r\n        localStorage.setItem('id',res.data.Id)\r\n        localStorage.setItem('etat',res.data.etat)\r\n\r\n        navigation.navigate(\"home\");\r\n        navigation.navigate(\"home\");\r\n      } else {\r\n        Alert.alert(\"Login Failed\", \"Invalid email or password\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      Alert.alert(\"Error\", \"Login failed. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n    <Text>Veuillez vous connecter</Text>\r\n    <Text>Votre email :</Text>\r\n        <TextInput\r\n          style={{ padding: 10, backgroundColor: \"lightgray\", borderRadius: 10, marginBottom: 10 }}\r\n          placeholder=\"fabiola@fab.com\"\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n      <Text>Votre mot de passe:</Text>\r\n      <TextInput\r\n        style={{ padding: 10, backgroundColor: \"lightgray\", borderRadius: 10, marginBottom: 10 }}\r\n        secureTextEntry\r\n        onChangeText={(text) => setPassword(text)}\r\n      />\r\n      <Button title=\"Se connecter\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LoginPatientScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAExC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAAuB;EAAA,IAAAC,KAAA;EAAA,IAAjBC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EACtC,IAAAC,SAAA,GAA0Bf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAG5B,IAAMG,WAAW,YAAXA,WAAWA,CAAA;IAAA,QAAAX,KAAA,GAAAA,KAAA,IAAAY,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,IAAMC,QAAQ,SAASpB,KAAK,CAACqB,IAAI,CAAC,yCAAyC,EAAE;UAC3ET,KAAK,EAALA,KAAK;UACLI,QAAQ,EAARA;QACF,CAAC,CAAC;QAEF,IAAII,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;UAElDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACC,GAAG,CAACH,IAAI,CAACI,KAAK,CAAC;UAC5CH,YAAY,CAACC,OAAO,CAAC,IAAI,EAACC,GAAG,CAACH,IAAI,CAACK,EAAE,CAAC;UACtCJ,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,GAAG,CAACH,IAAI,CAACM,IAAI,CAAC;UAE1CvB,UAAU,CAACwB,QAAQ,CAAC,MAAM,CAAC;UAC3BxB,UAAU,CAACwB,QAAQ,CAAC,MAAM,CAAC;QAC7B,CAAC,MAAM;UACLjC,KAAK,CAACkC,KAAK,CAAC,cAAc,EAAE,2BAA2B,CAAC;QAC1D;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAACA,KAAK,CAAC;QACpBnC,KAAK,CAACkC,KAAK,CAAC,OAAO,EAAE,uCAAuC,CAAC;MAC/D;IACF,CAAC,GAAAE,KAAA,OAAAC,SAAA;EAAA;EAED,OACEhC,KAAA,CAACT,IAAI;IAAA0C,QAAA,GACLnC,IAAA,CAACN,IAAI;MAAAyC,QAAA,EAAC;IAAuB,CAAM,CAAC,EACpCnC,IAAA,CAACN,IAAI;MAAAyC,QAAA,EAAC;IAAa,CAAM,CAAC,EACtBnC,IAAA,CAACL,SAAS;MACRyC,KAAK,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,eAAe,EAAE,WAAW;QAAEC,YAAY,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MACzFC,WAAW,EAAC,iBAAiB;MAC7BC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKhC,QAAQ,CAACgC,IAAI,CAAC;MAAA;IAAC,CACxC,CAAC,EACJ3C,IAAA,CAACN,IAAI;MAAAyC,QAAA,EAAC;IAAmB,CAAM,CAAC,EAChCnC,IAAA,CAACL,SAAS;MACRyC,KAAK,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,eAAe,EAAE,WAAW;QAAEC,YAAY,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MACzFI,eAAe;MACfF,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAK5B,WAAW,CAAC4B,IAAI,CAAC;MAAA;IAAC,CAC3C,CAAC,EACF3C,IAAA,CAACJ,MAAM;MAACiD,KAAK,EAAC,cAAc;MAACC,OAAO,EAAE9B;IAAY,CAAE,CAAC;EAAA,CACjD,CAAC;AAEX,CAAC;AAED,eAAeb,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}