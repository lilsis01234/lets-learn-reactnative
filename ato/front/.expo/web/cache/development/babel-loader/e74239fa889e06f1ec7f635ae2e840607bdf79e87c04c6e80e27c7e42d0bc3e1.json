{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState, useEffect } from 'react';\nimport { Provider } from 'react-redux';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport store from \"./Store\";\nimport AnimalList from \"./Components/AnimalList\";\nimport { addAnimal } from \"./Crud\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListeAnimal = function ListeAnimal(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    authenticated = _useState2[0],\n    setAuthenticated = _useState2[1];\n  useEffect(function () {\n    var isAuthenticated = localStorage.getItem('authenticated');\n    if (!isAuthenticated) {\n      navigation.navigate('Login');\n    } else {\n      setAuthenticated(true);\n      store.dispatch(addAnimal('1', 'Dog', 'Labrador', 'Brown', 'https://example.com/dog.jpg'));\n      store.dispatch(addAnimal('2', 'Cat', 'Siamese', 'White', 'https://example.com/cat.jpg'));\n    }\n  }, []);\n  return _jsxs(Provider, {\n    store: store,\n    children: [_jsx(AnimalList, {}), _jsx(TouchableOpacity, {\n      style: {\n        position: 'absolute',\n        bottom: 20,\n        right: 20,\n        backgroundColor: 'blue',\n        padding: 10,\n        borderRadius: 50\n      },\n      onPress: function onPress() {},\n      children: _jsx(Text, {\n        style: {\n          color: 'white',\n          fontSize: 20\n        },\n        children: \"+\"\n      })\n    })]\n  });\n};\nexport default ListeAnimal;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"absolute\": {\n      \"position\": \"absolute\"\n    }\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Provider","TouchableOpacity","Text","store","AnimalList","addAnimal","jsx","_jsx","jsxs","_jsxs","ListeAnimal","_ref","navigation","_useState","_useState2","_slicedToArray","authenticated","setAuthenticated","isAuthenticated","localStorage","getItem","navigate","dispatch","children","style","position","bottom","right","backgroundColor","padding","borderRadius","onPress","color","fontSize","_NativeWindStyleSheet","create","styles"],"sources":["C:/Users/Fabiola/Documents/front/components/Crud/Liste.js"],"sourcesContent":["// ListeAnimal.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { TouchableOpacity, Text } from 'react-native';\r\nimport store from './Store';\r\nimport AnimalList from './Components/AnimalList';\r\nimport { addAnimal } from './Crud'; // Import the addAnimal action\r\n\r\nconst ListeAnimal = ({ navigation }) => {\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const isAuthenticated = localStorage.getItem('authenticated');\r\n    if (!isAuthenticated) {\r\n      navigation.navigate('Login');\r\n    } else {\r\n      setAuthenticated(true);\r\n      // Dispatch an action to add default animals\r\n      store.dispatch(addAnimal('1', 'Dog', 'Labrador', 'Brown', 'https://example.com/dog.jpg'));\r\n      store.dispatch(addAnimal('2', 'Cat', 'Siamese', 'White', 'https://example.com/cat.jpg'));\r\n      // Add more default animals as needed\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <AnimalList />\r\n      <TouchableOpacity\r\n        style={{ position: 'absolute', bottom: 20, right: 20, backgroundColor: 'blue', padding: 10, borderRadius: 50 }}\r\n        onPress={() => {\r\n        }}>\r\n        <Text style={{ color: 'white', fontSize: 20 }}>+</Text>\r\n      </TouchableOpacity>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ListeAnimal;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,aAAa;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAEvC,OAAOC,KAAK;AACZ,OAAOC,UAAU;AACjB,SAASC,SAAS;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC/B,IAAAC,SAAA,GAA0Cf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtCf,SAAS,CAAC,YAAM;IACd,IAAMmB,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC7D,IAAI,CAACF,eAAe,EAAE;MACpBN,UAAU,CAACS,QAAQ,CAAC,OAAO,CAAC;IAC9B,CAAC,MAAM;MACLJ,gBAAgB,CAAC,IAAI,CAAC;MAEtBd,KAAK,CAACmB,QAAQ,CAACjB,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,6BAA6B,CAAC,CAAC;MACzFF,KAAK,CAACmB,QAAQ,CAACjB,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,6BAA6B,CAAC,CAAC;IAE1F;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OACEI,KAAA,CAACT,QAAQ;IAACG,KAAK,EAAEA,KAAM;IAAAoB,QAAA,GACrBhB,IAAA,CAACH,UAAU,IAAE,CAAC,EACdG,IAAA,CAACN,gBAAgB;MACfuB,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,eAAe,EAAE,MAAM;QAAEC,OAAO,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MAC/GC,OAAO,EAAE,SAAAA,QAAA,EAAM,CACf,CAAE;MAAAR,QAAA,EACFhB,IAAA,CAACL,IAAI;QAACsB,KAAK,EAAE;UAAEQ,KAAK,EAAE,OAAO;UAAEC,QAAQ,EAAE;QAAG,CAAE;QAAAV,QAAA,EAAC;MAAC,CAAM;IAAC,CACvC,CAAC;EAAA,CACX,CAAC;AAEf,CAAC;AAED,eAAeb,WAAW;AAACwB,qBAAA,CAAAC,MAAA;EAAAC,MAAA;IAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}