{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UserProfile = function UserProfile(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userData = _useState2[0],\n    setUserData = _useState2[1];\n  var etat = localStorage.getItem('etat');\n  useEffect(function () {\n    var doctorId = route.params.doctorId;\n    axios.get(`http://localhost:3000/doctor/profil/${doctorId}`).then(function (response) {\n      setUserData(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, [route.params]);\n  return _jsx(View, {\n    children: userData ? _jsxs(View, {\n      children: [_jsx(View, {\n        style: s.image,\n        ClassName: \"flex-row justify-center -mt-14\",\n        children: _jsx(Image, {\n          style: s.photo,\n          source: {\n            uri: `http://localhost:3000/uploads/${userData.photo}`\n          }\n        })\n      }), _jsx(Text, {\n        style: s.text2,\n        children: \" Name \"\n      }), \" \", userData.name, \" \", userData.firstname, _jsx(\"br\", {}), _jsx(Text, {\n        style: s.text2,\n        children: \" Sp\\xE9cialit\\xE9:\"\n      }), \" \", userData.speciality, _jsx(\"br\", {}), _jsx(Text, {\n        style: s.text2,\n        children: \" Contact:\"\n      }), \" \", userData.contact, _jsx(\"br\", {}), _jsx(Text, {\n        style: s.text2,\n        children: \" Experience:\"\n      }), \" \", userData.experience, _jsx(\"br\", {}), etat === 'doctor' ? _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('callScreen', {\n            userData: doctor._id\n          });\n        },\n        children: _jsx(Text, {\n          children: \"Appeler maintenant\"\n        })\n      }) : _jsx(Text, {\n        children: \"Other Content\"\n      })]\n    }) : _jsx(Text, {\n      children: \"Chargement en cours...\"\n    })\n  });\n};\nexport default UserProfile;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"-mt-14\": {\n      \"marginTop\": -56\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    }\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","Image","TouchableOpacity","axios","jsx","_jsx","jsxs","_jsxs","UserProfile","_ref","route","navigation","_useState","_useState2","_slicedToArray","userData","setUserData","etat","localStorage","getItem","doctorId","params","get","then","response","data","catch","error","console","children","style","s","image","ClassName","photo","source","uri","text2","name","firstname","speciality","contact","experience","onPress","navigate","doctor","_id","_NativeWindStyleSheet","create","styles"],"sources":["C:/Users/Fabiola/Desktop/projet/front/components/Profil/Profil.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, Image, TouchableOpacity } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst UserProfile = ({ route, navigation }) => {\r\n  const [userData, setUserData] = useState(null); // Initialize userData as null\r\n  const etat = localStorage.getItem('etat'); // Get the value of 'etat' from localStorage\r\n\r\n  useEffect(() => {\r\n    const { doctorId } = route.params;\r\n\r\n    // Make a GET request to fetch user data based on doctorId\r\n    axios.get(`http://localhost:3000/doctor/profil/${doctorId}`)\r\n      .then((response) => {\r\n        // Set the fetched user data to the state\r\n        setUserData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        // Handle errors appropriately\r\n        console.error(error);\r\n      });\r\n  }, [route.params]);\r\n\r\n  return (\r\n    <View>\r\n      {userData ? (\r\n        <View>\r\n          <View style={s.image} ClassName=\"flex-row justify-center -mt-14\">\r\n            <Image style={s.photo} source={{ uri: `http://localhost:3000/uploads/${userData.photo}` }} />\r\n          </View>\r\n          <Text style={s.text2}> Name </Text> {userData.name} {userData.firstname}\r\n          <br />\r\n          <Text style={s.text2}> Spécialité:</Text> {userData.speciality}\r\n          <br />\r\n          <Text style={s.text2}> Contact:</Text> {userData.contact}\r\n          <br />\r\n          <Text style={s.text2}> Experience:</Text> {userData.experience}\r\n          <br />\r\n          {/* Conditionally render based on the value of 'etat' */}\r\n          {etat === 'doctor' ? (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                navigation.navigate('callScreen', { userData: doctor._id });\r\n              }}\r\n            >\r\n              <Text>Appeler maintenant</Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            // Render something else if 'etat' is not 'doctor'\r\n            <Text>Other Content</Text>\r\n          )}\r\n        </View>\r\n      ) : (\r\n        <Text>Chargement en cours...</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}