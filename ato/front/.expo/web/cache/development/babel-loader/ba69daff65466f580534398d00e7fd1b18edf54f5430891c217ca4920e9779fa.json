{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect } from 'react-redux';\nimport { updateAnimal } from \"../Crud\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EditAnimalForm = function EditAnimalForm(_ref) {\n  var dispatch = _ref.dispatch,\n    animal = _ref.animal;\n  var _useState = useState(animal.nom),\n    _useState2 = _slicedToArray(_useState, 2),\n    nom = _useState2[0],\n    setNom = _useState2[1];\n  var _useState3 = useState(animal.type),\n    _useState4 = _slicedToArray(_useState3, 2),\n    type = _useState4[0],\n    setType = _useState4[1];\n  var _useState5 = useState(animal.couleur),\n    _useState6 = _slicedToArray(_useState5, 2),\n    couleur = _useState6[0],\n    setCouleur = _useState6[1];\n  var _useState7 = useState(animal.photo),\n    _useState8 = _slicedToArray(_useState7, 2),\n    photo = _useState8[0],\n    setPhoto = _useState8[1];\n  var handleSubmit = function handleSubmit() {\n    dispatch(updateAnimal(animal.id, {\n      nom: nom,\n      type: type,\n      couleur: couleur,\n      photo: photo\n    }));\n  };\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"Nom\",\n      value: nom,\n      onChangeText: setNom\n    }), _jsx(TextInput, {\n      placeholder: \"Type\",\n      value: type,\n      onChangeText: setType\n    }), _jsx(TextInput, {\n      placeholder: \"Couleur\",\n      value: couleur,\n      onChangeText: setCouleur\n    }), _jsx(TextInput, {\n      placeholder: \"Photo\",\n      value: photo,\n      onChangeText: setPhoto\n    }), _jsx(Button, {\n      title: \"Save\",\n      onPress: handleSubmit\n    })]\n  });\n};\nexport default connect()(EditAnimalForm);","map":{"version":3,"names":["React","useState","View","TextInput","Button","connect","updateAnimal","jsx","_jsx","jsxs","_jsxs","EditAnimalForm","_ref","dispatch","animal","_useState","nom","_useState2","_slicedToArray","setNom","_useState3","type","_useState4","setType","_useState5","couleur","_useState6","setCouleur","_useState7","photo","_useState8","setPhoto","handleSubmit","id","children","placeholder","value","onChangeText","title","onPress"],"sources":["C:/Users/Fabiola/Documents/react-native/front/components/Crud/Components/EditAnimalForm.js"],"sourcesContent":["// EditAnimalForm.js\r\nimport React, { useState } from 'react';\r\nimport { View, TextInput, Button } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { updateAnimal } from '../Crud';\r\n\r\nconst EditAnimalForm = ({ dispatch, animal }) => {\r\n  const [nom, setNom] = useState(animal.nom);\r\n  const [type, setType] = useState(animal.type);\r\n  const [couleur, setCouleur] = useState(animal.couleur);\r\n  const [photo, setPhoto] = useState(animal.photo);\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(updateAnimal(animal.id, { nom, type, couleur, photo }));\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <TextInput placeholder=\"Nom\" value={nom} onChangeText={setNom} />\r\n      <TextInput placeholder=\"Type\" value={type} onChangeText={setType} />\r\n      <TextInput placeholder=\"Couleur\" value={couleur} onChangeText={setCouleur} />\r\n      <TextInput placeholder=\"Photo\" value={photo} onChangeText={setPhoto} />\r\n      <Button title=\"Save\" onPress={handleSubmit} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default connect()(EditAnimalForm);\r\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAExC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,YAAY;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvC,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAA6B;EAAA,IAAvBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,MAAM,GAAAF,IAAA,CAANE,MAAM;EACxC,IAAAC,SAAA,GAAsBd,QAAQ,CAACa,MAAM,CAACE,GAAG,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAnCC,GAAG,GAAAC,UAAA;IAAEE,MAAM,GAAAF,UAAA;EAClB,IAAAG,UAAA,GAAwBnB,QAAQ,CAACa,MAAM,CAACO,IAAI,CAAC;IAAAC,UAAA,GAAAJ,cAAA,CAAAE,UAAA;IAAtCC,IAAI,GAAAC,UAAA;IAAEC,OAAO,GAAAD,UAAA;EACpB,IAAAE,UAAA,GAA8BvB,QAAQ,CAACa,MAAM,CAACW,OAAO,CAAC;IAAAC,UAAA,GAAAR,cAAA,CAAAM,UAAA;IAA/CC,OAAO,GAAAC,UAAA;IAAEC,UAAU,GAAAD,UAAA;EAC1B,IAAAE,UAAA,GAA0B3B,QAAQ,CAACa,MAAM,CAACe,KAAK,CAAC;IAAAC,UAAA,GAAAZ,cAAA,CAAAU,UAAA;IAAzCC,KAAK,GAAAC,UAAA;IAAEC,QAAQ,GAAAD,UAAA;EAEtB,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBnB,QAAQ,CAACP,YAAY,CAACQ,MAAM,CAACmB,EAAE,EAAE;MAAEjB,GAAG,EAAHA,GAAG;MAAEK,IAAI,EAAJA,IAAI;MAAEI,OAAO,EAAPA,OAAO;MAAEI,KAAK,EAALA;IAAM,CAAC,CAAC,CAAC;EAClE,CAAC;EAED,OACEnB,KAAA,CAACR,IAAI;IAAAgC,QAAA,GACH1B,IAAA,CAACL,SAAS;MAACgC,WAAW,EAAC,KAAK;MAACC,KAAK,EAAEpB,GAAI;MAACqB,YAAY,EAAElB;IAAO,CAAE,CAAC,EACjEX,IAAA,CAACL,SAAS;MAACgC,WAAW,EAAC,MAAM;MAACC,KAAK,EAAEf,IAAK;MAACgB,YAAY,EAAEd;IAAQ,CAAE,CAAC,EACpEf,IAAA,CAACL,SAAS;MAACgC,WAAW,EAAC,SAAS;MAACC,KAAK,EAAEX,OAAQ;MAACY,YAAY,EAAEV;IAAW,CAAE,CAAC,EAC7EnB,IAAA,CAACL,SAAS;MAACgC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAEP,KAAM;MAACQ,YAAY,EAAEN;IAAS,CAAE,CAAC,EACvEvB,IAAA,CAACJ,MAAM;MAACkC,KAAK,EAAC,MAAM;MAACC,OAAO,EAAEP;IAAa,CAAE,CAAC;EAAA,CAC1C,CAAC;AAEX,CAAC;AAED,eAAe3B,OAAO,CAAC,CAAC,CAACM,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}