{"ast":null,"code":"import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport CardDoctors from \"./components/CardDoctor/CardDoctorList\";\nimport RegisterPatient from \"./components/Authentification/Inscription/InscriptionPatient\";\nimport RegisterDoctor from \"./components/Authentification/Inscription/InscriptionDoctor\";\nimport LoginDoctorScreen from \"./components/Authentification/Login/LoginDoctor\";\nimport LoginPatientScreen from \"./components/Authentification/Login/LoginPatient\";\nimport AppointmentsScreen from \"./components/VisioConference/VisioConference\";\nimport Login from \"./screens/Login\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"accueil\",\n      children: [_jsx(Stack.Screen, {\n        name: \"home\",\n        component: CardDoctors\n      }), _jsx(Stack.Screen, {\n        name: \"inscriptionDoctor\",\n        component: RegisterDoctor\n      }), _jsx(Stack.Screen, {\n        name: \"inscriptionPatient\",\n        component: RegisterPatient\n      }), _jsx(Stack.Screen, {\n        name: \"login\",\n        component: Login\n      }), _jsx(Stack.Screen, {\n        name: \"loginPatient\",\n        component: LoginPatientScreen\n      }), _jsx(Stack.Screen, {\n        name: \"callScreen\",\n        component: AppointmentsScreen,\n        initialParams: {\n          doctorId: null\n        }\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["createNativeStackNavigator","HomeScreen","AsyncStorage","NavigationContainer","createStackNavigator","CardDoctors","RegisterPatient","RegisterDoctor","LoginDoctorScreen","LoginPatientScreen","AppointmentsScreen","Login","jsx","_jsx","jsxs","_jsxs","Stack","App","children","Navigator","initialRouteName","Screen","name","component","initialParams","doctorId"],"sources":["C:/Users/Fabiola/Desktop/projet/front/App.js"],"sourcesContent":["import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\n\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\n// Importez vos composants de vue\r\nimport CardDoctors from './components/CardDoctor/CardDoctorList';\r\nimport RegisterPatient  from './components/Authentification/Inscription/InscriptionPatient';\r\nimport RegisterDoctor from './components/Authentification/Inscription/InscriptionDoctor';\r\n\r\nimport LoginDoctorScreen from './components/Authentification/Login/LoginDoctor';\r\nimport LoginPatientScreen from './components/Authentification/Login/LoginPatient';\r\nimport AppointmentsScreen from './components/VisioConference/VisioConference';\r\nimport Login from \"./screens/Login\";\r\nconst Stack = createStackNavigator();\r\n\r\nconst App = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"accueil\">\r\n        <Stack.Screen name=\"home\" component={CardDoctors} />\r\n        <Stack.Screen name=\"inscriptionDoctor\" component={RegisterDoctor} />\r\n        <Stack.Screen name=\"inscriptionPatient\" component={RegisterPatient} />\r\n        <Stack.Screen name=\"login\" component={Login} />  \r\n        <Stack.Screen name=\"loginPatient\" component={LoginPatientScreen} />   \r\n        <Stack.Screen name=\"callScreen\" component={AppointmentsScreen} initialParams={{ doctorId: null }}/>   \r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"AAAA,SAASA,0BAA0B,QAAQ,gCAAgC;AAE3E,OAAOC,UAAU;AAEjB,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAG9D,OAAOC,WAAW;AAClB,OAAOC,eAAe;AACtB,OAAOC,cAAc;AAErB,OAAOC,iBAAiB;AACxB,OAAOC,kBAAkB;AACzB,OAAOC,kBAAkB;AACzB,OAAOC,KAAK;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AACpC,IAAMC,KAAK,GAAGZ,oBAAoB,CAAC,CAAC;AAEpC,IAAMa,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,OACEJ,IAAA,CAACV,mBAAmB;IAAAe,QAAA,EAClBH,KAAA,CAACC,KAAK,CAACG,SAAS;MAACC,gBAAgB,EAAC,SAAS;MAAAF,QAAA,GACzCL,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAElB;MAAY,CAAE,CAAC,EACpDQ,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,mBAAmB;QAACC,SAAS,EAAEhB;MAAe,CAAE,CAAC,EACpEM,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,oBAAoB;QAACC,SAAS,EAAEjB;MAAgB,CAAE,CAAC,EACtEO,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEZ;MAAM,CAAE,CAAC,EAC/CE,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,cAAc;QAACC,SAAS,EAAEd;MAAmB,CAAE,CAAC,EACnEI,IAAA,CAACG,KAAK,CAACK,MAAM;QAACC,IAAI,EAAC,YAAY;QAACC,SAAS,EAAEb,kBAAmB;QAACc,aAAa,EAAE;UAAEC,QAAQ,EAAE;QAAK;MAAE,CAAC,CAAC;IAAA,CACpF;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeR,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}