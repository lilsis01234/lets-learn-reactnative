{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginDoctorScreen = function LoginDoctorScreen(_ref) {\n  var _ref2;\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    token = _useState6[0],\n    setToken = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    id = _useState8[0],\n    setId = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    etat = _useState10[0],\n    setEtat = _useState10[1];\n  var handleLogin = function handleLogin() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      try {\n        var res = yield axios.post(\"http://127.0.0.1:3000/auth/loginDoctor\", {\n          email: email,\n          password: password\n        });\n        if (res.status === 200) {\n          console.log(\"Login Response Data:\", res.data);\n          setToken(res.data.token);\n          setId(res.data.id);\n          navigation.navigate(\"home\");\n        } else {\n          Alert.alert(\"Login Failed\", \"Invalid email or password\");\n        }\n      } catch (error) {\n        console.error(error);\n        Alert.alert(\"Error\", \"Login failed. Please try again later.\");\n      }\n    })).apply(this, arguments);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Bonjour docteur!\"\n    }), _jsx(Text, {\n      children: \"Votre email :\"\n    }), _jsx(TextInput, {\n      style: {\n        padding: 10,\n        backgroundColor: \"lightgray\",\n        borderRadius: 10,\n        marginBottom: 10\n      },\n      placeholder: \"fabiola@fab.com\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(Text, {\n      children: \"Votre mot de passe:\"\n    }), _jsx(TextInput, {\n      style: {\n        padding: 10,\n        backgroundColor: \"lightgray\",\n        borderRadius: 10,\n        marginBottom: 10\n      },\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(Button, {\n      title: \"Se connecter\",\n      onPress: handleLogin\n    })]\n  });\n};\nexport default LoginDoctorScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","Alert","axios","jsx","_jsx","jsxs","_jsxs","LoginDoctorScreen","_ref","_ref2","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","token","setToken","_useState7","_useState8","id","setId","_useState9","_useState10","etat","setEtat","handleLogin","_asyncToGenerator","res","post","status","console","log","data","navigate","alert","error","apply","arguments","children","style","padding","backgroundColor","borderRadius","marginBottom","placeholder","onChangeText","text","secureTextEntry","title","onPress"],"sources":["C:/Users/Fabiola/Desktop/projet/front/components/Authentification/Login/LoginDoctor.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, Button, Alert } from \"react-native\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginDoctorScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const[token,setToken] = useState(\"\");\r\n  const[id,setId] = useState(\"\");\r\n  const[etat,setEtat] = useState(\"\");\r\n\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const res = await axios.post(\"http://127.0.0.1:3000/auth/loginDoctor\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        console.log(\"Login Response Data:\", res.data);\r\n        setToken(res.data.token)\r\n        setId(res.data.id)\r\n        navigation.navigate(\"home\");\r\n      } else {\r\n        Alert.alert(\"Login Failed\", \"Invalid email or password\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      Alert.alert(\"Error\", \"Login failed. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n    <Text>Bonjour docteur!</Text>\r\n    <Text>Votre email :</Text>\r\n        <TextInput\r\n          style={{ padding: 10, backgroundColor: \"lightgray\", borderRadius: 10, marginBottom: 10 }}\r\n          placeholder=\"fabiola@fab.com\"\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n      <Text>Votre mot de passe:</Text>\r\n      <TextInput\r\n        style={{ padding: 10, backgroundColor: \"lightgray\", borderRadius: 10, marginBottom: 10 }}\r\n        secureTextEntry\r\n        onChangeText={(text) => setPassword(text)}\r\n      />\r\n      <Button title=\"Se connecter\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LoginDoctorScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}