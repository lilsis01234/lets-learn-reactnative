{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from 'react-redux';\nimport { addAnimal } from \"../Crud\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddAnimalForm = function AddAnimalForm(_ref) {\n  var dispatch = _ref.dispatch,\n    onClose = _ref.onClose;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    nom = _useState2[0],\n    setNom = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    type = _useState4[0],\n    setType = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    couleur = _useState6[0],\n    setCouleur = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    image = _useState8[0],\n    setImage = _useState8[1];\n  var handleImagePicker = function handleImagePicker() {\n    var options = {\n      title: 'Select Image',\n      storageOptions: {\n        skipBackup: true,\n        path: 'images'\n      }\n    };\n    ImagePicker.showImagePicker(options, function (response) {\n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n      } else {\n        setImage(response.uri);\n      }\n    });\n  };\n  var handleSubmit = function handleSubmit() {\n    dispatch(addAnimal(nom, type, couleur, image));\n    setNom('');\n    setType('');\n    setCouleur('');\n    setImage(null);\n    onClose();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nom\",\n      value: nom,\n      onChangeText: setNom\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Type\",\n      value: type,\n      onChangeText: setType\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Couleur\",\n      value: couleur,\n      onChangeText: setCouleur\n    }), _jsx(TouchableOpacity, {\n      style: styles.input,\n      onPress: handleImagePicker,\n      children: image ? _jsx(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 100,\n          height: 100\n        }\n      }) : _jsx(Text, {\n        children: \"Choisir une image\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.editButton,\n      onPress: handleSubmit,\n      children: _jsx(Text, {\n        children: \"Ajouter\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  editButton: {\n    backgroundColor: 'orange',\n    borderRadius: 5,\n    padding: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default connect()(AddAnimalForm);\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","View","TextInput","Button","StyleSheet","TouchableOpacity","Text","Image","connect","addAnimal","ImagePicker","jsx","_jsx","jsxs","_jsxs","AddAnimalForm","_ref","dispatch","onClose","_useState","_useState2","_slicedToArray","nom","setNom","_useState3","_useState4","type","setType","_useState5","_useState6","couleur","setCouleur","_useState7","_useState8","image","setImage","handleImagePicker","options","title","storageOptions","skipBackup","path","showImagePicker","response","didCancel","console","log","error","uri","handleSubmit","style","styles","container","children","input","placeholder","value","onChangeText","onPress","source","width","height","editButton","create","backgroundColor","padding","borderRadius","borderWidth","borderColor","marginBottom","alignItems","justifyContent","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/Fabiola/Documents/front/components/Crud/Components/AddAnimalForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, StyleSheet, TouchableOpacity, Text, Image } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { addAnimal } from '../Crud';\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nconst AddAnimalForm = ({ dispatch, onClose }) => {\r\n  const [nom, setNom] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [couleur, setCouleur] = useState('');\r\n  const [image, setImage] = useState(null); // Store image URI\r\n\r\n  const handleImagePicker = () => {\r\n    const options = {\r\n      title: 'Select Image',\r\n      storageOptions: {\r\n        skipBackup: true,\r\n        path: 'images',\r\n      },\r\n    };\r\n\r\n    // Show image picker\r\n    ImagePicker.showImagePicker(options, response => {\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n      } else if (response.error) {\r\n        console.log('ImagePicker Error: ', response.error);\r\n      } else {\r\n        // Set selected image URI\r\n        setImage(response.uri);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(addAnimal(nom, type, couleur, image));\r\n    setNom('');\r\n    setType('');\r\n    setCouleur('');\r\n    setImage(null); \r\n    onClose(); \r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput style={styles.input} placeholder=\"Nom\" value={nom} onChangeText={setNom} />\r\n      <TextInput style={styles.input} placeholder=\"Type\" value={type} onChangeText={setType} />\r\n      <TextInput style={styles.input} placeholder=\"Couleur\" value={couleur} onChangeText={setCouleur} />\r\n      <TouchableOpacity style={styles.input} onPress={handleImagePicker}>\r\n        {image ? <Image source={{ uri: image }} style={{ width: 100, height: 100 }} /> : <Text>Choisir une image</Text>}\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.editButton} onPress={handleSubmit}>\r\n        <Text>Ajouter</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    borderRadius: 10,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: 'gray',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  editButton: {\r\n    backgroundColor: 'orange',\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default connect()(AddAnimalForm);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}