{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { connect } from 'react-redux';\nimport { deleteUser } from \"../Crud\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UserList = function UserList(_ref) {\n  var users = _ref.users,\n    dispatch = _ref.dispatch;\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: users,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(\"table\", {\n          children: _jsxs(\"tr\", {\n            style: Test.id % 2 === 0 ? styles.grey : styles.white,\n            children: [_jsx(\"td\", {\n              children: _jsx(Text, {\n                style: styles.textes,\n                children: Test.nom\n              })\n            }), _jsx(\"td\", {\n              children: _jsx(Text, {\n                style: styles.textes,\n                children: Test.prenom\n              })\n            }), _jsx(\"td\", {\n              children: _jsx(Text, {\n                style: styles.textes,\n                children: Test.nomUser\n              })\n            }), _jsx(\"td\", {\n              children: _jsx(Text, {\n                style: styles.textes,\n                children: Test.age\n              })\n            }), _jsx(\"td\", {\n              children: _jsx(TouchableOpacity, {\n                style: styles.deleteButton,\n                onPress: function onPress() {\n                  return handleDelete(Test.id);\n                },\n                children: _jsx(Text, {\n                  style: styles.deleteButtonText,\n                  children: \"Delete\"\n                })\n              })\n            })]\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.usernom;\n      }\n    })\n  });\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.users\n  };\n};\nexport default connect(mapStateToProps)(UserList);","map":{"version":3,"names":["React","View","Text","FlatList","Button","connect","deleteUser","jsx","_jsx","jsxs","_jsxs","UserList","_ref","users","dispatch","children","data","renderItem","_ref2","item","style","Test","id","styles","grey","white","textes","nom","prenom","nomUser","age","TouchableOpacity","deleteButton","onPress","handleDelete","deleteButtonText","keyExtractor","usernom","mapStateToProps","state"],"sources":["C:/Users/Fabiola/Documents/front/components/Exercice/Tpredux/Components/UserList.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, FlatList, Button } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { deleteUser } from '../Crud';\r\n\r\nconst UserList = ({ users, dispatch }) => {\r\n  return (\r\n    <View>\r\n      <FlatList\r\n        data={users}\r\n        renderItem={({ item }) => (\r\n        <table>\r\n                    <tr style={Test.id % 2 === 0 ? styles.grey : styles.white}>\r\n                        <td><Text style={styles.textes}>{Test.nom}</Text></td>\r\n                        <td><Text style={styles.textes}>{Test.prenom}</Text></td>\r\n                        <td><Text style={styles.textes}>{Test.nomUser}</Text></td>\r\n                        <td><Text style={styles.textes}>{Test.age}</Text></td>\r\n                        <td>\r\n                            <TouchableOpacity\r\n                                style={styles.deleteButton}\r\n                                onPress={() => handleDelete(Test.id)}\r\n                            >\r\n                                <Text style={styles.deleteButtonText}>Delete</Text>\r\n                            </TouchableOpacity>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n        )}\r\n        keyExtractor={(item) => item.usernom}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users,\r\n});\r\n\r\nexport default connect(mapStateToProps)(UserList);\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,MAAA;AAE1B,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErC,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAA4B;EAAA,IAAtBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EACjC,OACEN,IAAA,CAACP,IAAI;IAAAc,QAAA,EACHP,IAAA,CAACL,QAAQ;MACPa,IAAI,EAAEH,KAAM;MACZI,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;QAAA,OACnBX,IAAA;UAAAO,QAAA,EACYL,KAAA;YAAIU,KAAK,EAAEC,IAAI,CAACC,EAAE,GAAG,CAAC,KAAK,CAAC,GAAGC,MAAM,CAACC,IAAI,GAAGD,MAAM,CAACE,KAAM;YAAAV,QAAA,GACtDP,IAAA;cAAAO,QAAA,EAAIP,IAAA,CAACN,IAAI;gBAACkB,KAAK,EAAEG,MAAM,CAACG,MAAO;gBAAAX,QAAA,EAAEM,IAAI,CAACM;cAAG,CAAO;YAAC,CAAI,CAAC,EACtDnB,IAAA;cAAAO,QAAA,EAAIP,IAAA,CAACN,IAAI;gBAACkB,KAAK,EAAEG,MAAM,CAACG,MAAO;gBAAAX,QAAA,EAAEM,IAAI,CAACO;cAAM,CAAO;YAAC,CAAI,CAAC,EACzDpB,IAAA;cAAAO,QAAA,EAAIP,IAAA,CAACN,IAAI;gBAACkB,KAAK,EAAEG,MAAM,CAACG,MAAO;gBAAAX,QAAA,EAAEM,IAAI,CAACQ;cAAO,CAAO;YAAC,CAAI,CAAC,EAC1DrB,IAAA;cAAAO,QAAA,EAAIP,IAAA,CAACN,IAAI;gBAACkB,KAAK,EAAEG,MAAM,CAACG,MAAO;gBAAAX,QAAA,EAAEM,IAAI,CAACS;cAAG,CAAO;YAAC,CAAI,CAAC,EACtDtB,IAAA;cAAAO,QAAA,EACIP,IAAA,CAACuB,gBAAgB;gBACbX,KAAK,EAAEG,MAAM,CAACS,YAAa;gBAC3BC,OAAO,EAAE,SAAAA,QAAA;kBAAA,OAAMC,YAAY,CAACb,IAAI,CAACC,EAAE,CAAC;gBAAA,CAAC;gBAAAP,QAAA,EAErCP,IAAA,CAACN,IAAI;kBAACkB,KAAK,EAAEG,MAAM,CAACY,gBAAiB;kBAAApB,QAAA,EAAC;gBAAM,CAAM;cAAC,CACrC;YAAC,CACnB,CAAC;UAAA,CACL;QAAC,CACF,CAAC;MAAA,CACd;MACFqB,YAAY,EAAE,SAAAA,aAACjB,IAAI;QAAA,OAAKA,IAAI,CAACkB,OAAO;MAAA;IAAC,CACtC;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAAK;EAAA,OAAM;IAClC1B,KAAK,EAAE0B,KAAK,CAAC1B;EACf,CAAC;AAAA,CAAC;AAEF,eAAeR,OAAO,CAACiC,eAAe,CAAC,CAAC3B,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}