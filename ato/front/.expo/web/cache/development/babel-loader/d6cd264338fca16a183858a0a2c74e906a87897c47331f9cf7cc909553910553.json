{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useEffect, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function CardDoctor(_ref) {\n  var firstname = _ref.firstname,\n    name = _ref.name,\n    specialité = _ref.specialité;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    doctors = _useState2[0],\n    setDoctors = _useState2[1];\n  useEffect(function () {\n    axios.get('localhost:3000/doctor/allDoctor').then(function (response) {\n      setDoctors(response.data);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n  console.log();\n  return _jsxs(View, {\n    style: s.form,\n    children: [doctors.map(function (doctor, index) {\n      return _jsxs(View, {\n        style: s.form1,\n        children: [_jsx(View, {\n          style: s.image,\n          ClassName: \"flex-row justify-center -mt-14\",\n          children: _jsx(Image, {\n            style: s.photo,\n            source: require(`localhost:3000/uploads/${doctor.photo}`)\n          })\n        }), _jsxs(Text, {\n          style: s.text,\n          children: [_jsx(Text, {\n            style: s.text2,\n            children: \" Name \"\n          }), \" \", doctor.name, _jsx(\"br\", {}), _jsx(Text, {\n            style: s.text2,\n            children: \" firstname:\"\n          }), \" \", doctor.firstname, _jsx(\"br\", {}), _jsx(Text, {\n            style: s.text2,\n            children: \" specialit\\xE9 \"\n          }), doctor.specialité]\n        })]\n      }, index);\n    }), \"s\"]\n  });\n}\n_NativeWindStyleSheet.create({\n  styles: {\n    \"-mt-14\": {\n      \"marginTop\": -56\n    },\n    \"flex-row\": {\n      \"flexDirection\": \"row\"\n    },\n    \"justify-center\": {\n      \"justifyContent\": \"center\"\n    }\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Image","Text","View","axios","jsx","_jsx","jsxs","_jsxs","CardDoctor","_ref","firstname","name","specialité","_useState","_useState2","_slicedToArray","doctors","setDoctors","get","then","response","data","catch","error","console","log","style","s","form","children","map","doctor","index","form1","image","ClassName","photo","source","require","text","text2","_NativeWindStyleSheet","create","styles"],"sources":["C:/Users/Fabiola/Desktop/projet/front/components/CardDoctor/CardDoctor.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Image, Text, View } from \"react-native\";\r\nimport axios from \"axios\"; // Import axios for making API requests\r\n\r\nexport function CardDoctor({ firstname, name, specialité }) {\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Make an API request to fetch data from the backend\r\n    axios.get('localhost:3000/doctor/allDoctor')\r\n      .then((response) => {\r\n        // Store the fetched data in the state\r\n        setDoctors(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []); // Empty dependency array ensures the effect runs only once, when the component mounts\r\n\r\n  console.log()\r\n  return (\r\n    <View style={s.form}>\r\n      {doctors.map((doctor, index) => (\r\n        <View key={index} style={s.form1}>\r\n          <View style={s.image} ClassName=\"flex-row justify-center -mt-14\">\r\n            <Image style={s.photo} source={require(`localhost:3000/uploads/${doctor.photo}`)} />\r\n          </View>\r\n          <Text style={s.text}>\r\n            <Text style={s.text2}> Name </Text> {doctor.name}\r\n            <br />\r\n            <Text style={s.text2}> firstname:</Text> {doctor.firstname}\r\n            <br />\r\n            <Text style={s.text2}> specialité </Text>\r\n            {doctor.specialité}\r\n          </Text>\r\n        </View>\r\n      ))}s\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEnD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,OAAO,SAASC,UAAUA,CAAAC,IAAA,EAAkC;EAAA,IAA/BC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEC,UAAU,GAAAH,IAAA,CAAVG,UAAU;EACtD,IAAAC,SAAA,GAA8Bd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1BhB,SAAS,CAAC,YAAM;IAEdK,KAAK,CAACe,GAAG,CAAC,iCAAiC,CAAC,CACzCC,IAAI,CAAC,UAACC,QAAQ,EAAK;MAElBH,UAAU,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACC,GAAG,CAAC,CAAC;EACb,OACElB,KAAA,CAACL,IAAI;IAACwB,KAAK,EAAEC,CAAC,CAACC,IAAK;IAAAC,QAAA,GACjBb,OAAO,CAACc,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;MAAA,OACzBzB,KAAA,CAACL,IAAI;QAAawB,KAAK,EAAEC,CAAC,CAACM,KAAM;QAAAJ,QAAA,GAC/BxB,IAAA,CAACH,IAAI;UAACwB,KAAK,EAAEC,CAAC,CAACO,KAAM;UAACC,SAAS,EAAC,gCAAgC;UAAAN,QAAA,EAC9DxB,IAAA,CAACL,KAAK;YAAC0B,KAAK,EAAEC,CAAC,CAACS,KAAM;YAACC,MAAM,EAAEC,OAAO,CAAE,0BAAyBP,MAAM,CAACK,KAAM,EAAC;UAAE,CAAE;QAAC,CAChF,CAAC,EACP7B,KAAA,CAACN,IAAI;UAACyB,KAAK,EAAEC,CAAC,CAACY,IAAK;UAAAV,QAAA,GAClBxB,IAAA,CAACJ,IAAI;YAACyB,KAAK,EAAEC,CAAC,CAACa,KAAM;YAAAX,QAAA,EAAC;UAAM,CAAM,CAAC,KAAC,EAACE,MAAM,CAACpB,IAAI,EAChDN,IAAA,SAAK,CAAC,EACNA,IAAA,CAACJ,IAAI;YAACyB,KAAK,EAAEC,CAAC,CAACa,KAAM;YAAAX,QAAA,EAAC;UAAW,CAAM,CAAC,KAAC,EAACE,MAAM,CAACrB,SAAS,EAC1DL,IAAA,SAAK,CAAC,EACNA,IAAA,CAACJ,IAAI;YAACyB,KAAK,EAAEC,CAAC,CAACa,KAAM;YAAAX,QAAA,EAAC;UAAY,CAAM,CAAC,EACxCE,MAAM,CAACnB,UAAU;QAAA,CACd,CAAC;MAAA,GAXEoB,KAYL,CAAC;IAAA,CACR,CAAC,EAAC,GACL;EAAA,CAAM,CAAC;AAEX;AAACS,qBAAA,CAAAC,MAAA;EAAAC,MAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}