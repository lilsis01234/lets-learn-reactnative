{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginPatientScreen = function LoginPatientScreen(_ref) {\n  var _ref2;\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      try {\n        var res = yield axios.post(\"http://127.0.0.1:3000/auth/loginPatient\", {\n          email: email,\n          password: password\n        });\n        if (res.status === 200) {\n          console.log(\"Login Response Data:\", res.data);\n          localStorage.setItem('token', res.data.token);\n          localStorage.setItem('id', res.data.Id);\n          localStorage.setItem('etat', res.data.etat);\n          navigation.navigate(\"home\");\n        } else {\n          Alert.alert(\"Login Failed\", \"Invalid email or password\");\n        }\n      } catch (error) {\n        console.error(error);\n        Alert.alert(\"Error\", \"Login failed. Please try again later.\");\n      }\n    })).apply(this, arguments);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Connectez-vous en tant que Patient\"\n    }), _jsx(Text, {\n      children: \"Votre email :\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"fabiola@fab.com\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(Text, {\n      children: \"Votre mot de passe:\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(Button, {\n      title: \"Se connecter\",\n      onPress: handleLogin\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 20\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    textAlign: \"center\"\n  },\n  input: {\n    padding: 10,\n    backgroundColor: \"lightgray\",\n    borderRadius: 10,\n    marginBottom: 10\n  }\n});\nexport default LoginPatientScreen;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","Alert","StyleSheet","axios","jsx","_jsx","jsxs","_jsxs","LoginPatientScreen","_ref","_ref2","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","_asyncToGenerator","res","post","status","console","log","data","localStorage","setItem","token","Id","etat","navigate","alert","error","apply","arguments","style","styles","container","children","title","input","placeholder","onChangeText","text","secureTextEntry","onPress","create","flex","backgroundColor","padding","fontSize","fontWeight","marginBottom","textAlign","borderRadius","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/Fabiola/Desktop/projet/front/components/Authentification/Login/LoginPatient.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TextInput, Button, Alert, StyleSheet } from \"react-native\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginPatientScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const res = await axios.post(\"http://127.0.0.1:3000/auth/loginPatient\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        console.log(\"Login Response Data:\", res.data);\r\n\r\n        localStorage.setItem('token', res.data.token)\r\n        localStorage.setItem('id', res.data.Id)\r\n        localStorage.setItem('etat', res.data.etat)\r\n\r\n        navigation.navigate(\"home\");\r\n      } else {\r\n        Alert.alert(\"Login Failed\", \"Invalid email or password\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      Alert.alert(\"Error\", \"Login failed. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Connectez-vous en tant que Patient</Text>\r\n      <Text>Votre email :</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"fabiola@fab.com\"\r\n        onChangeText={(text) => setEmail(text)}\r\n      />\r\n      <Text>Votre mot de passe:</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        secureTextEntry\r\n        onChangeText={(text) => setPassword(text)}\r\n      />\r\n      <Button title=\"Se connecter\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    padding: 10,\r\n    backgroundColor: \"lightgray\",\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default LoginPatientScreen;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,IAAA,EAAuB;EAAA,IAAAC,KAAA;EAAA,IAAjBC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EACtC,IAAAC,SAAA,GAA0BhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,YAAXA,WAAWA,CAAA;IAAA,QAAAX,KAAA,GAAAA,KAAA,IAAAY,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,IAAMC,GAAG,SAASpB,KAAK,CAACqB,IAAI,CAAC,yCAAyC,EAAE;UACtET,KAAK,EAALA,KAAK;UACLI,QAAQ,EAARA;QACF,CAAC,CAAC;QAEF,IAAII,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;UACtBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,GAAG,CAACK,IAAI,CAAC;UAE7CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,GAAG,CAACK,IAAI,CAACG,KAAK,CAAC;UAC7CF,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEP,GAAG,CAACK,IAAI,CAACI,EAAE,CAAC;UACvCH,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,GAAG,CAACK,IAAI,CAACK,IAAI,CAAC;UAE3CtB,UAAU,CAACuB,QAAQ,CAAC,MAAM,CAAC;QAC7B,CAAC,MAAM;UACLjC,KAAK,CAACkC,KAAK,CAAC,cAAc,EAAE,2BAA2B,CAAC;QAC1D;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdV,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC;QACpBnC,KAAK,CAACkC,KAAK,CAAC,OAAO,EAAE,uCAAuC,CAAC;MAC/D;IACF,CAAC,GAAAE,KAAA,OAAAC,SAAA;EAAA;EAED,OACE/B,KAAA,CAACV,IAAI;IAAC0C,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BrC,IAAA,CAACP,IAAI;MAACyC,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAkC,CAAM,CAAC,EACpErC,IAAA,CAACP,IAAI;MAAA4C,QAAA,EAAC;IAAa,CAAM,CAAC,EAC1BrC,IAAA,CAACN,SAAS;MACRwC,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,iBAAiB;MAC7BC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAK/B,QAAQ,CAAC+B,IAAI,CAAC;MAAA;IAAC,CACxC,CAAC,EACF1C,IAAA,CAACP,IAAI;MAAA4C,QAAA,EAAC;IAAmB,CAAM,CAAC,EAChCrC,IAAA,CAACN,SAAS;MACRwC,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBI,eAAe;MACfF,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAK3B,WAAW,CAAC2B,IAAI,CAAC;MAAA;IAAC,CAC3C,CAAC,EACF1C,IAAA,CAACL,MAAM;MAAC2C,KAAK,EAAC,cAAc;MAACM,OAAO,EAAE5B;IAAY,CAAE,CAAC;EAAA,CACjD,CAAC;AAEX,CAAC;AAED,IAAMmB,MAAM,GAAGtC,UAAU,CAACgD,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,OAAO;IACxBC,OAAO,EAAE;EACX,CAAC;EACDV,KAAK,EAAE;IACLW,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDb,KAAK,EAAE;IACLS,OAAO,EAAE,EAAE;IACXD,eAAe,EAAE,WAAW;IAC5BM,YAAY,EAAE,EAAE;IAChBF,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAehD,kBAAkB;AAACmD,qBAAA,CAAAT,MAAA;EAAAV,MAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;EAAAoB,OAAA;IAAA;EAAA;EAAAC,MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}