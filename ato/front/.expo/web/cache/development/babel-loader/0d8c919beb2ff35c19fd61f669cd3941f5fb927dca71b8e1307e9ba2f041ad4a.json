{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TpCart2 = function TpCart2() {\n  var _useState = useState([{\n      id: 0,\n      value: 'A',\n      suit: 'carreau'\n    }, {\n      id: 1,\n      value: '2',\n      suit: 'carreau'\n    }, {\n      id: 2,\n      value: '3',\n      suit: 'carreau'\n    }, {\n      id: 3,\n      value: '4',\n      suit: 'carreau'\n    }, {\n      id: 4,\n      value: '5',\n      suit: 'carreau'\n    }, {\n      id: 5,\n      value: '6',\n      suit: 'carreau'\n    }, {\n      id: 6,\n      value: '7',\n      suit: 'carreau'\n    }, {\n      id: 7,\n      value: '8',\n      suit: 'carreau'\n    }, {\n      id: 8,\n      value: '9',\n      suit: 'carreau'\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    cards = _useState2[0],\n    setCards = _useState2[1];\n  var moveCards = function moveCards() {\n    setCards(function (prevCards) {\n      var newCards = _toConsumableArray(prevCards);\n      newCards.forEach(function (card) {\n        var newValue = parseInt(card.value);\n        if (newValue === 14) newValue = 7;else newValue++;\n        card.value = newValue.toString();\n      });\n      return newCards;\n    });\n  };\n  var changeSuit = function changeSuit(id) {\n    setCards(function (prevCards) {\n      var newCards = prevCards.map(function (card) {\n        if (card.id === id) {\n          switch (card.suit) {\n            case 'carreau':\n              card.suit = 'coeur';\n              break;\n            case 'coeur':\n              card.suit = 'pique';\n              break;\n            case 'pique':\n              card.suit = 'trèfle';\n              break;\n            case 'trèfle':\n              card.suit = 'carreau';\n              break;\n            default:\n              break;\n          }\n        }\n        return card;\n      });\n      return newCards;\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.table,\n      children: cards.map(function (card, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return changeSuit(index);\n          },\n          children: _jsxs(View, {\n            style: [styles.cell, {\n              backgroundColor: card.id === 4 ? 'red' : 'transparent'\n            }],\n            children: [_jsx(Text, {\n              children: card.value\n            }), _jsx(Text, {\n              children: card.suit\n            })]\n          })\n        }, index);\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: moveCards,\n      children: _jsx(View, {\n        style: styles.centerCell\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  table: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    width: 240\n  },\n  cell: {\n    width: 80,\n    height: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: 'black',\n    margin: 5\n  },\n  centerCell: {\n    width: 80,\n    height: 120,\n    backgroundColor: 'red',\n    margin: 5\n  }\n});\nexport default TpCart2;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"hidden\": {\n      \"display\": \"none\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","View","TouchableOpacity","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","TpCart2","_useState","id","value","suit","_useState2","_slicedToArray","cards","setCards","moveCards","prevCards","newCards","_toConsumableArray","forEach","card","newValue","parseInt","toString","changeSuit","map","style","styles","container","children","table","index","onPress","cell","backgroundColor","centerCell","create","flex","justifyContent","alignItems","flexDirection","flexWrap","width","height","borderWidth","borderColor","margin","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/Fabiola/Documents/front/components/Exercice/TP Carte/TpCarte2.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet } from 'react-native';\r\n\r\nconst TpCart2 = () => {\r\n  const [cards, setCards] = useState([\r\n    { id: 0, value: 'A', suit: 'carreau' },\r\n    { id: 1, value: '2', suit: 'carreau' },\r\n    { id: 2, value: '3', suit: 'carreau' },\r\n    { id: 3, value: '4', suit: 'carreau' },\r\n    { id: 4, value: '5', suit: 'carreau' },\r\n    { id: 5, value: '6', suit: 'carreau' },\r\n    { id: 6, value: '7', suit: 'carreau' },\r\n    { id: 7, value: '8', suit: 'carreau' },\r\n    { id: 8, value: '9', suit: 'carreau' },\r\n  ]);\r\n\r\n  // Fonction pour déplacer les cartes\r\n  const moveCards = () => {\r\n    setCards(prevCards => {\r\n      const newCards = [...prevCards];\r\n      newCards.forEach(card => {\r\n        let newValue = parseInt(card.value);\r\n        if (newValue === 14) newValue = 7; // Si c'est un A, devient 7\r\n        else newValue++;\r\n        card.value = newValue.toString();\r\n      });\r\n      return newCards;\r\n    });\r\n  };\r\n\r\n  // Fonction pour changer la famille d'une carte\r\n  const changeSuit = (id) => {\r\n    setCards(prevCards => {\r\n      const newCards = prevCards.map(card => {\r\n        if (card.id === id) {\r\n          switch (card.suit) {\r\n            case 'carreau':\r\n              card.suit = 'coeur';\r\n              break;\r\n            case 'coeur':\r\n              card.suit = 'pique';\r\n              break;\r\n            case 'pique':\r\n              card.suit = 'trèfle';\r\n              break;\r\n            case 'trèfle':\r\n              card.suit = 'carreau';\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n        return card;\r\n      });\r\n      return newCards;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.table}>\r\n        {cards.map((card, index) => (\r\n          <TouchableOpacity key={index} onPress={() => changeSuit(index)}>\r\n            <View style={[styles.cell, { backgroundColor: card.id === 4 ? 'red' : 'transparent' }]}>\r\n              <Text>{card.value}</Text>\r\n              <Text>{card.suit}</Text>\r\n            </View>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n      <TouchableOpacity onPress={moveCards}>\r\n        <View style={styles.centerCell}></View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#fff',\r\n  },\r\n  table: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    width: 240,\r\n  },\r\n  cell: {\r\n    width: 80,\r\n    height: 120,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderColor: 'black',\r\n    margin: 5,\r\n  },\r\n  centerCell: {\r\n    width: 80,\r\n    height: 120,\r\n    backgroundColor: 'red',\r\n    margin: 5,\r\n  },\r\n});\r\n\r\nexport default TpCart2;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}